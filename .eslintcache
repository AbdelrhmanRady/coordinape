[{"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/index.tsx":"1","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/reportWebVitals.ts":"2","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/App.tsx":"3","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/routes.tsx":"4","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/index.ts":"5","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/contexts/index.ts":"6","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/shadows.ts":"7","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/custom.ts":"8","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/colors.ts":"9","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/typography.ts":"10","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/index.ts":"11","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/index.ts":"12","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/contexts/globalContext/index.tsx":"13","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/contexts/connectedWeb3/index.tsx":"14","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/HomePage/index.tsx":"15","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Loader/index.ts":"16","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Modal/index.ts":"17","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Button/index.ts":"18","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/connectors.ts":"19","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/config/constants.ts":"20","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/MainLayout/index.tsx":"21","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/AccountInfo/index.tsx":"22","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/enums.ts":"23","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/MainLayout/components/index.ts":"24","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Button/ConnectWalletButtonItem/index.tsx":"25","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Button/ConnectWalletButton/index.tsx":"26","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Modal/LoadingModal/index.tsx":"27","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/config/networks.ts":"28","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/styles/common.ts":"29","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/index.ts":"30","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/type-utils.ts":"31","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/MainLayout/components/Footer/index.tsx":"32","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/MainLayout/components/Header/index.tsx":"33","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Modal/ConnectWalletModal/index.tsx":"34","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Loader/LoadingScreen/index.tsx":"35","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/logger.ts":"36","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/HomePage/components/index.ts":"37","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/HomePage/components/HeaderSection/index.tsx":"38","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/HomePage/components/ContentSection/index.tsx":"39","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/global.ts":"40","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/services/api.ts":"41","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/provider.ts":"42"},{"size":606,"mtime":1614170299000,"results":"43","hashOfConfig":"44"},{"size":425,"mtime":1613618017000,"results":"45","hashOfConfig":"44"},{"size":953,"mtime":1614097806000,"results":"46","hashOfConfig":"44"},{"size":1134,"mtime":1613618581000,"results":"47","hashOfConfig":"44"},{"size":1764,"mtime":1614104068000,"results":"48","hashOfConfig":"44"},{"size":66,"mtime":1613618017000,"results":"49","hashOfConfig":"44"},{"size":3262,"mtime":1613618017000,"results":"50","hashOfConfig":"44"},{"size":91,"mtime":1614102609000,"results":"51","hashOfConfig":"44"},{"size":209,"mtime":1614173375000,"results":"52","hashOfConfig":"44"},{"size":584,"mtime":1613618017000,"results":"53","hashOfConfig":"44"},{"size":108,"mtime":1614127707000,"results":"54","hashOfConfig":"44"},{"size":30,"mtime":1613618017000,"results":"55","hashOfConfig":"44"},{"size":2822,"mtime":1613652659000,"results":"56","hashOfConfig":"44"},{"size":2511,"mtime":1613618017000,"results":"57","hashOfConfig":"44"},{"size":384,"mtime":1614127304000,"results":"58","hashOfConfig":"44"},{"size":33,"mtime":1613618017000,"results":"59","hashOfConfig":"44"},{"size":70,"mtime":1613618017000,"results":"60","hashOfConfig":"44"},{"size":82,"mtime":1613618017000,"results":"61","hashOfConfig":"44"},{"size":1263,"mtime":1613618017000,"results":"62","hashOfConfig":"44"},{"size":1002,"mtime":1613618017000,"results":"63","hashOfConfig":"44"},{"size":904,"mtime":1614258095000,"results":"64","hashOfConfig":"44"},{"size":2711,"mtime":1614172221000,"results":"65","hashOfConfig":"44"},{"size":168,"mtime":1613618017000,"results":"66","hashOfConfig":"44"},{"size":52,"mtime":1613618017000,"results":"67","hashOfConfig":"44"},{"size":1099,"mtime":1614173437000,"results":"68","hashOfConfig":"44"},{"size":549,"mtime":1613652594000,"results":"69","hashOfConfig":"44"},{"size":1461,"mtime":1614173483000,"results":"70","hashOfConfig":"44"},{"size":2598,"mtime":1613618017000,"results":"71","hashOfConfig":"44"},{"size":1324,"mtime":1614261160000,"results":"72","hashOfConfig":"44"},{"size":1956,"mtime":1613618017000,"results":"73","hashOfConfig":"44"},{"size":297,"mtime":1613615465000,"results":"74","hashOfConfig":"44"},{"size":1463,"mtime":1614104220000,"results":"75","hashOfConfig":"44"},{"size":1666,"mtime":1613641808000,"results":"76","hashOfConfig":"44"},{"size":6550,"mtime":1614173408000,"results":"77","hashOfConfig":"44"},{"size":586,"mtime":1613618017000,"results":"78","hashOfConfig":"44"},{"size":229,"mtime":1613618017000,"results":"79","hashOfConfig":"44"},{"size":67,"mtime":1614097797000,"results":"80","hashOfConfig":"44"},{"size":2131,"mtime":1614269122000,"results":"81","hashOfConfig":"44"},{"size":10635,"mtime":1614305034000,"results":"82","hashOfConfig":"44"},{"size":51,"mtime":1614097787000,"results":"83","hashOfConfig":"44"},{"size":4036,"mtime":1614307794000,"results":"84","hashOfConfig":"44"},{"size":294,"mtime":1614073779000,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"5jra5b",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/index.tsx",[],["183"],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/reportWebVitals.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/App.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/routes.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/contexts/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/shadows.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/custom.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/colors.ts",["184"],"import { transparentize } from 'polished';\n\nconst color = {\n  transparent: '#0000',\n  white: '#fff',\n  black: '#000',\n  primary: '#5E6F74',\n  secondary: '#56606f',\n  third: '#EAEAEB',\n};\nexport default color;\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/typography.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/contexts/globalContext/index.tsx",["185","186","187","188","189","190","191","192"],"import axios from 'axios';\nimport { ConnectWalletModal, LoadingModal } from 'components';\nimport { TOKEN_PRICE_DECIMALS } from 'config/constants';\nimport { useConnectedWeb3Context } from 'contexts/connectedWeb3';\nimport { BigNumber, ethers } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nimport { ERC20Service } from 'services/erc20';\nimport { StakeService } from 'services/stake';\nimport { KnownToken } from 'types';\nimport { ZERO_NUMBER } from 'utils/number';\n\ninterface IBalanceInfo {\n  ethBalance: BigNumber;\n  tokenBalances: {\n    [key in KnownToken]: BigNumber;\n  };\n  fssInTotal: BigNumber;\n  fmaInStaking: BigNumber;\n  ratioFMAFSS: BigNumber;\n  withdrawableDivends: BigNumber;\n}\n\nexport interface IGlobalData {\n  walletConnectModalOpened: boolean;\n  isLoading: boolean;\n  loadingText: string;\n}\n\nexport interface IGlobalDefaultData extends IGlobalData {\n  toggleWalletConnectModal: () => void;\n  setLoading: (loading: boolean, loadingText?: string) => void;\n}\n\nconst GlobalContext = React.createContext<IGlobalDefaultData>({\n  walletConnectModalOpened: false,\n  toggleWalletConnectModal: () => {},\n  isLoading: false,\n  loadingText: '',\n  setLoading: () => {},\n});\n\nexport const useGlobal = () => {\n  const context = React.useContext(GlobalContext);\n\n  if (!context) {\n    throw new Error('Component rendered outside the provider tree');\n  }\n\n  return context;\n};\n\ninterface IProps {\n  children: React.ReactNode | React.ReactNode[];\n}\n\nexport const GlobalProvider = (props: IProps) => {\n  const [state, setState] = useState<IGlobalData>({\n    walletConnectModalOpened: false,\n    isLoading: false,\n    loadingText: '',\n  });\n  const { account, library: provider, networkId } = useConnectedWeb3Context();\n\n  const loadAllData = async () => {};\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    loadAllData();\n  }, [networkId, account]);\n\n  const toggleWalletConnectModal = () => {\n    setState((prevState) => ({\n      ...prevState,\n      walletConnectModalOpened: !prevState.walletConnectModalOpened,\n    }));\n  };\n\n  const setLoading = (loading: boolean, loadingText?: string) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: loading,\n      loadingText: loadingText || '',\n    }));\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        ...state,\n        toggleWalletConnectModal,\n        setLoading,\n      }}\n    >\n      {props.children}\n      {state.walletConnectModalOpened && (\n        <ConnectWalletModal\n          onClose={toggleWalletConnectModal}\n          visible={state.walletConnectModalOpened}\n        />\n      )}\n      {state.isLoading && (\n        <LoadingModal\n          onClose={() => setLoading(false)}\n          text={state.loadingText}\n          visible={state.isLoading}\n        />\n      )}\n    </GlobalContext.Provider>\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/contexts/connectedWeb3/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/HomePage/index.tsx",["193","194","195"],"import { makeStyles } from '@material-ui/core';\nimport React from 'react';\n\nimport { ContentSection, HeaderSection } from './components';\n\nconst useStyles = makeStyles((theme) => ({}));\n\ninterface IProps {\n  className?: string;\n}\n\nconst HomePage = (props: IProps) => {\n  return (\n    <div>\n      <HeaderSection />\n      <ContentSection />\n    </div>\n  );\n};\n\nexport default HomePage;\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Loader/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Modal/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Button/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/connectors.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/config/constants.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/MainLayout/index.tsx",["196"],"import { makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { linearGradient } from 'polished';\nimport React from 'react';\nimport useCommonStyles from 'styles/common';\n\nimport { Header } from './components';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n    background: '#EAEAEB',\n    backgroundImage: 'linear-gradient(#FFFFFF, rgba(255, 255, 255, 0.4))',\n    paddingTop: theme.custom.appHeaderHeight,\n  },\n  content: {\n    height: '100%',\n  },\n}));\n\ninterface IProps {\n  className?: string;\n  children: React.ReactNode | React.ReactNode[];\n}\n\nexport const MainLayout = (props: IProps) => {\n  const classes = useStyles();\n  const commonClasses = useCommonStyles();\n  return (\n    <div className={classes.root}>\n      <Header />\n      <main className={clsx(classes.content, commonClasses.scroll)}>\n        {props.children}\n      </main>\n    </div>\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/AccountInfo/index.tsx",["197"],"import {\n  Button,\n  Hidden,\n  Popover,\n  Typography,\n  makeStyles,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { WALLET_ICONS } from 'config/constants';\nimport React from 'react';\nimport { shortenAddress } from 'utils';\nimport { ConnectorNames } from 'utils/enums';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  iconWrapper: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n    borderRadius: '50%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '& svg': {\n      width: theme.spacing(2),\n      height: theme.spacing(2),\n    },\n  },\n  address: {\n    textTransform: 'none',\n    color: theme.colors.primary,\n    fontSize: 12,\n    marginRight: theme.spacing(1),\n  },\n  icon: {\n    color: theme.colors.third,\n  },\n  popover: {\n    backgroundColor: theme.colors.white,\n    padding: theme.spacing(0.5),\n  },\n  popoverButton: {\n    height: theme.spacing(5),\n    minWidth: 150,\n  },\n}));\n\ninterface IProps {\n  address: string;\n  onDisconnect: () => void;\n  icon: string;\n}\n\nexport const AccountInfo = (props: IProps) => {\n  const classes = useStyles();\n  const { address, icon, onDisconnect } = props;\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const Icon = WALLET_ICONS[icon as ConnectorNames];\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'account-popover' : undefined;\n\n  return (\n    <div className={classes.root}>\n      <Hidden smDown>\n        <div className={classes.iconWrapper}>\n          <Icon />\n        </div>\n      </Hidden>\n\n      <Button aria-describedby={id} onClick={handleClick} variant=\"text\">\n        <Typography className={classes.address} component=\"span\">\n          {shortenAddress(address)}\n        </Typography>\n      </Button>\n      <Popover\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        classes={{\n          paper: classes.popover,\n        }}\n        id={id}\n        onClose={handleClose}\n        open={open}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        <Button\n          className={classes.popoverButton}\n          onClick={() => {\n            handleClose();\n            onDisconnect();\n          }}\n          variant=\"contained\"\n        >\n          Disconnect\n        </Button>\n      </Popover>\n    </div>\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/enums.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/MainLayout/components/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Button/ConnectWalletButtonItem/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Button/ConnectWalletButton/index.tsx",["198"],"import { Button, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontSize: 14,\n  },\n}));\n\ninterface IProps {\n  className?: string;\n  onClick: () => void;\n}\n\nexport const ConnectWalletButton = (props: IProps) => {\n  const classes = useStyles();\n  return (\n    <Button\n      className={clsx(classes.root, props.className)}\n      onClick={() => {\n        props.onClick();\n      }}\n      variant=\"text\"\n    >\n      Connect Wallet\n    </Button>\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Modal/LoadingModal/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/config/networks.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/styles/common.ts",["199","200"],"import { makeStyles } from '@material-ui/core';\nimport { opacify, transparentize } from 'polished';\n\nconst useCommonStyles = makeStyles((theme) => ({\n  scroll: {\n    overflowY: 'auto',\n    '&::-webkit-scrollbar': {\n      width: theme.spacing(0.5),\n    },\n    '&::-webkit-scrollbar-track': {},\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: theme.colors.primary,\n    },\n  },\n  transparentButton: {\n    // backgroundColor: opacify(-0.9, theme.colors.white),\n    borderRadius: theme.spacing(0.75),\n    color: theme.colors.white,\n    // \"&:hover\": {\n    //   backgroundColor: opacify(-0.5, theme.colors.white),\n    // },\n  },\n  textAlignRight: {\n    textAlign: 'right',\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  fadeAnimation: {\n    transition: 'all 1s',\n    opacity: 0,\n    '&.visible': {\n      opacity: 1,\n    },\n  },\n  hideBelowWide: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none !important',\n    },\n  },\n  showBelowWide: {\n    [theme.breakpoints.up('md')]: {\n      display: 'none !important',\n    },\n  },\n  maxHeightTransition: {\n    overflow: 'hidden',\n    maxHeight: 0,\n    transition: 'max-height 0.5s cubic-bezier(0, 1, 0, 1)',\n    '&.visible': {\n      maxHeight: 2000,\n      transition: 'max-height 1s ease-in-out',\n    },\n  },\n}));\n\nexport default useCommonStyles;\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/type-utils.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/MainLayout/components/Footer/index.tsx",["201","202"],"import { Button, makeStyles } from '@material-ui/core';\nimport { transparentize } from 'polished';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: theme.custom.appFooterHeight,\n    display: 'flex',\n    justifyContent: 'center',\n    padding: `0 ${theme.spacing(4)}px`,\n    alignItems: 'center',\n    position: 'fixed',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    [theme.breakpoints.down('xs')]: {\n      padding: `0 ${theme.spacing(2)}px`,\n    },\n    background: '#5E6F74',\n  },\n  balance: {\n    fontSize: 40,\n    color: 'white',\n  },\n  balanceNumber: {\n    fontWeight: 600,\n  },\n  description: {\n    marginLeft: 16,\n    fontSize: 20,\n    color: 'white',\n  },\n  saveButton: {\n    marginLeft: 44,\n    height: 35,\n    padding: '0px 37px',\n    borderRadius: 8,\n    background: '#31A5AC',\n    fontSize: 18,\n    fontWeight: 600,\n    color: 'white',\n    '&:hover': {\n      backgroundColor: 'rgba(255, 255, 255, 0.7)',\n    },\n  },\n}));\n\ninterface IProps {\n  className?: string;\n}\n\nexport const Footer = (props: IProps) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <p className={classes.balance}>\n        <span className={classes.balanceNumber}>25</span> of{' '}\n        <span className={classes.balanceNumber}>100</span>\n      </p>\n      <p className={classes.description}>GIVE Allocated</p>\n      <Button className={classes.saveButton}>Save Allocations</Button>\n    </div>\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/MainLayout/components/Header/index.tsx",["203"],"import { makeStyles } from '@material-ui/core';\nimport { AccountInfo, ConnectWalletButton } from 'components';\nimport { STORAGE_KEY_CONNECTOR } from 'config/constants';\nimport { useConnectedWeb3Context, useGlobal } from 'contexts';\nimport { transparentize } from 'polished';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: theme.custom.appHeaderHeight,\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: `0 ${theme.spacing(4)}px`,\n    alignItems: 'center',\n    boxShadow: `0px 1px 2px ${transparentize(0.9, theme.colors.black)}`,\n    position: 'fixed',\n    left: 0,\n    right: 0,\n    top: 0,\n    [theme.breakpoints.down('xs')]: {\n      padding: `0 ${theme.spacing(2)}px`,\n    },\n  },\n  img: {\n    height: Number(theme.custom.appHeaderHeight) / 2,\n  },\n}));\n\ninterface IProps {\n  className?: string;\n}\n\nexport const Header = (props: IProps) => {\n  const classes = useStyles();\n  const { account, rawWeb3Context } = useConnectedWeb3Context();\n  const { toggleWalletConnectModal } = useGlobal();\n  const connector = localStorage.getItem(STORAGE_KEY_CONNECTOR);\n\n  const onDisconnect = () => {\n    rawWeb3Context.deactivate();\n    localStorage.removeItem(STORAGE_KEY_CONNECTOR);\n  };\n\n  return (\n    <div className={classes.root}>\n      <img\n        alt=\"logo\"\n        className={classes.img}\n        src=\"/svgs/logo/coordinape_logo.svg\"\n      />\n      {!account ? (\n        <ConnectWalletButton onClick={toggleWalletConnectModal} />\n      ) : (\n        <AccountInfo\n          address={account}\n          icon={connector || ''}\n          onDisconnect={onDisconnect}\n        />\n      )}\n    </div>\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Modal/ConnectWalletModal/index.tsx",["204"],"import {\n  CircularProgress,\n  Divider,\n  Grid,\n  IconButton,\n  Modal,\n  Typography,\n  makeStyles,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useWeb3React } from '@web3-react/core';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport { ConnectWalletButtonItem } from 'components';\nimport { STORAGE_KEY_CONNECTOR } from 'config/constants';\nimport React, { useEffect } from 'react';\nimport connectors from 'utils/connectors';\nimport { ConnectorNames } from 'utils/enums';\nimport { getLogger } from 'utils/logger';\n\nconst logger = getLogger('ConnectWalletModal::Index');\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  content: {\n    outline: 'none',\n    backgroundColor: theme.colors.third,\n    minWidth: 700,\n    maxWidth: 700,\n    borderRadius: theme.spacing(1),\n    padding: `${theme.spacing(2)}px`,\n    userSelect: `none`,\n    [theme.breakpoints.down('sm')]: {\n      minWidth: 350,\n      maxWidth: 350,\n    },\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: theme.spacing(2),\n  },\n  title: {\n    color: theme.colors.primary,\n    fontSize: theme.spacing(3),\n  },\n  closeButton: {\n    padding: theme.spacing(0.5),\n    color: theme.colors.primary,\n  },\n  bottom: {\n    padding: `0 ${theme.spacing(2)}px`,\n    textAlign: 'center',\n    '& > * + *': { marginTop: theme.spacing(1.5) },\n  },\n  helper: {\n    textAlign: 'center',\n    marginTop: theme.spacing(2),\n  },\n  loader: {\n    textAlign: 'center',\n  },\n}));\n\ninterface IProps {\n  visible: boolean;\n  onClose: () => void;\n}\n\nexport const ConnectWalletModal = (props: IProps) => {\n  const classes = useStyles();\n  const context = useWeb3React();\n  const { onClose, visible } = props;\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<any>();\n\n  useEffect(() => {\n    if (activatingConnector && activatingConnector === context.connector) {\n      setActivatingConnector(undefined);\n      onClose();\n    }\n    // eslint-disable-next-line\n  }, [activatingConnector, context.connector]);\n\n  if (context.error) {\n    localStorage.removeItem(STORAGE_KEY_CONNECTOR);\n    context.deactivate();\n    onClose();\n    logger.error('Error in web3 context', context.error);\n  }\n\n  const isMetamaskEnabled = 'ethereum' in window || 'web3' in window;\n\n  const onClickWallet = (wallet: ConnectorNames) => {\n    const currentConnector = connectors[wallet];\n    if (wallet === ConnectorNames.Injected) {\n      setActivatingConnector(currentConnector);\n    }\n    if (wallet === ConnectorNames.WalletConnect) {\n      setActivatingConnector(currentConnector);\n    }\n\n    if (wallet) {\n      if (\n        currentConnector instanceof WalletConnectConnector &&\n        currentConnector.walletConnectProvider?.wc?.uri\n      ) {\n        currentConnector.walletConnectProvider = undefined;\n      }\n      context.activate(currentConnector);\n      localStorage.setItem(STORAGE_KEY_CONNECTOR, wallet);\n    }\n  };\n\n  const isConnectingToWallet = !!activatingConnector;\n  let connectingText = `Connecting to wallet`;\n  const connectingToMetamask = activatingConnector === connectors.injected;\n  const connectingToWalletConnect =\n    activatingConnector === connectors.walletconnect;\n  if (connectingToMetamask) {\n    connectingText = 'Waiting for Approval on Metamask';\n  }\n  if (connectingToWalletConnect) {\n    connectingText = 'Opening QR for Wallet Connect';\n  }\n\n  const disableMetamask: boolean = !isMetamaskEnabled || false;\n\n  return (\n    <Modal\n      className={classes.modal}\n      disableBackdropClick={isConnectingToWallet}\n      onClose={onClose}\n      open={visible}\n    >\n      <div className={classes.content}>\n        <div className={classes.header}>\n          <Typography className={classes.title} component=\"h3\">\n            Sign In\n          </Typography>\n          <IconButton className={classes.closeButton} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n\n        {isConnectingToWallet ? (\n          <div className={classes.loader}>\n            <CircularProgress />\n            <Typography>{connectingText}</Typography>\n          </div>\n        ) : (\n          <div>\n            <Grid container spacing={1}>\n              <Grid item md={6} xs={12}>\n                <ConnectWalletButtonItem\n                  disabled={disableMetamask}\n                  icon={ConnectorNames.Injected}\n                  onClick={() => {\n                    onClickWallet(ConnectorNames.Injected);\n                  }}\n                  text=\"Metamask\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <ConnectWalletButtonItem\n                  disabled={isConnectingToWallet}\n                  icon={ConnectorNames.WalletConnect}\n                  onClick={() => {\n                    onClickWallet(ConnectorNames.WalletConnect);\n                  }}\n                  text=\"Wallet Connect\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <ConnectWalletButtonItem\n                  disabled={isConnectingToWallet}\n                  icon={ConnectorNames.WalletLink}\n                  onClick={() => {\n                    onClickWallet(ConnectorNames.WalletLink);\n                  }}\n                  text=\"Coinbase Wallet\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <ConnectWalletButtonItem\n                  disabled={isConnectingToWallet}\n                  icon={ConnectorNames.Fortmatic}\n                  onClick={() => {\n                    onClickWallet(ConnectorNames.Fortmatic);\n                  }}\n                  text=\"Fortmatic\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <ConnectWalletButtonItem\n                  disabled={isConnectingToWallet}\n                  icon={ConnectorNames.Portis}\n                  onClick={() => {\n                    onClickWallet(ConnectorNames.Portis);\n                  }}\n                  text=\"Portis\"\n                />\n              </Grid>\n            </Grid>\n          </div>\n        )}\n        <Typography className={classes.helper}>\n          New to Ethereum?{' '}\n          <a href=\"https://ethereum.org\">Learn more about wallets</a>\n        </Typography>\n      </div>\n    </Modal>\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Loader/LoadingScreen/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/logger.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/HomePage/components/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/HomePage/components/HeaderSection/index.tsx",["205","206"],"import { makeStyles } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n    marginTop: 60,\n    maxWidth: '60%',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: '54px',\n    fontWeight: 'bold',\n    color: '#5E6F74',\n    margin: 0,\n  },\n  subTitle: {\n    padding: '0px 32px',\n    fontSize: '27px',\n    color: '#5E6F74',\n    margin: 0,\n  },\n}));\n\ninterface IProps {\n  className?: string;\n}\n\nexport const HeaderSection = (props: IProps) => {\n  const classes = useStyles();\n\n  const calculateTimeLeft = () => {\n    const date = new Date();\n    const lastDay = new Date(\n      Date.UTC(date.getFullYear(), date.getMonth() + 1, 0)\n    );\n    const difference = lastDay.getTime() - date.getTime();\n\n    let timeLeft = {};\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n    // Clear timeout if the component is unmounted\n    return () => clearTimeout(timer);\n  }, []);\n\n  let timeLeftString = '';\n  let timeLeftIndex = 0;\n\n  Object.typedKeys(timeLeft).forEach((interval) => {\n    if (!timeLeft[interval] || timeLeftIndex > 1) {\n      return;\n    }\n\n    if (\n      (timeLeftIndex === 0 && timeLeft[interval] !== 0) ||\n      timeLeftIndex === 1\n    ) {\n      timeLeftString =\n        timeLeftString + timeLeft[interval] + ' ' + interval + ' ';\n      timeLeftIndex++;\n    }\n  });\n\n  return (\n    <div className={classes.root}>\n      <p className={classes.title}>Reward Yearn Contributors</p>\n      <p className={classes.subTitle}>\n        GIVE tokens worth $38,000 will be distributed to contributors at the\n        snapshot in {timeLeftString}\n      </p>\n    </div>\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/HomePage/components/ContentSection/index.tsx",["207","208","209","210"],"import { Button, makeStyles } from '@material-ui/core';\nimport { LoadingModal } from 'components';\nimport { useConnectedWeb3Context, useGlobal } from 'contexts';\nimport { useSnackbar } from 'notistack';\nimport React, { useEffect, useState } from 'react';\nimport { getApiService } from 'services/api';\nimport { ITokenGift, IUser, Maybe, PostTokenGiftsParam } from 'types';\nimport { isUnparsedPrepend } from 'typescript';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n    marginTop: 80,\n    maxWidth: '80%',\n    paddingTop: 8,\n    paddingBottom: 30,\n    paddingLeft: 94,\n    paddingRight: 94,\n    borderRadius: 8,\n    background: '#EAEAEB',\n    marginBottom: theme.custom.appFooterHeight\n      ? (theme.custom.appFooterHeight as number) + 30\n      : 30,\n  },\n  table: {\n    width: '100%',\n    borderCollapse: 'collapse',\n    position: 'relative',\n  },\n  one: {\n    width: '20%',\n  },\n  two: {\n    width: '20%',\n  },\n  three: {\n    width: '40%',\n  },\n  trHeader: {\n    height: 80,\n  },\n  th: {\n    fontSize: 16,\n    fontWeight: 700,\n    color: 'rgba(81, 99, 105, 0.5)',\n    background: '#EAEAEB',\n    position: 'sticky',\n    top: 0,\n    boxShadow: '0 1px 0 0 rgba(81, 99, 105, 0.2)',\n    zIndex: 1,\n  },\n  trBody: {\n    height: 70,\n    border: 'solid',\n    borderTopWidth: 0,\n    borderBottomWidth: 1,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: 'rgba(81, 99, 105, 0.2)',\n  },\n  tdName: {\n    fontSize: 27,\n    fontWeight: 600,\n    color: '#516369',\n    textAlign: 'center',\n    padding: '0px 10px',\n  },\n  tdDistribution: {\n    fontSize: 20,\n    color: '#516369',\n    textAlign: 'center',\n    padding: '0px 10px',\n  },\n  tdAllocate: {\n    textAlign: 'center',\n    padding: '0px 10px',\n  },\n  tdNote: {\n    textAlign: 'center',\n    padding: '0px 25px',\n  },\n  inputGiveToken: {\n    width: 85,\n    height: 41,\n    border: 0,\n    borderRadius: 8,\n    padding: 10,\n    fontSize: 20,\n    fontWeight: 400,\n    color: '#516369',\n    textAlign: 'center',\n  },\n  inputGiveNote: {\n    width: '100%',\n    height: 41,\n    border: 0,\n    borderRadius: 8,\n    padding: 13,\n    fontSize: 13,\n    fontWeight: 400,\n    color: '#516369',\n    textOverflow: 'ellipsis',\n    '&::placeholder': {\n      color: '#516369',\n      opacity: 0.2,\n    },\n  },\n  footer: {\n    height: theme.custom.appFooterHeight,\n    display: 'flex',\n    justifyContent: 'center',\n    padding: `0 ${theme.spacing(4)}px`,\n    alignItems: 'center',\n    position: 'fixed',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    [theme.breakpoints.down('xs')]: {\n      padding: `0 ${theme.spacing(2)}px`,\n    },\n    background: '#5E6F74',\n  },\n  balance: {\n    fontSize: 40,\n    color: 'white',\n  },\n  balanceNumber: {\n    fontWeight: 600,\n  },\n  description: {\n    marginLeft: 16,\n    fontSize: 20,\n    color: 'white',\n  },\n  saveButton: {\n    marginLeft: 44,\n    height: 35,\n    padding: '0px 37px',\n    borderRadius: 8,\n    background: '#31A5AC',\n    fontSize: 18,\n    fontWeight: 600,\n    color: 'white',\n    '&:hover': {\n      backgroundColor: 'rgba(255, 255, 255, 0.7)',\n    },\n  },\n}));\n\ninterface IProps {\n  className?: string;\n}\n\nexport const ContentSection = (props: IProps) => {\n  const classes = useStyles();\n  const { account, library } = useConnectedWeb3Context();\n  const [me, setMe] = useState<Maybe<IUser>>(null);\n  const [users, setUsers] = useState<IUser[]>([]);\n  const [tokenGifts, setTokenGifts] = useState<ITokenGift[]>([]);\n  const [sumOfTokens, setSumOfTokens] = useState<number>(0);\n  const [giveTokens, setGiveTokens] = useState<{ [id: number]: number }>({});\n  const [giveNotes, setGiveNotes] = useState<{ [id: number]: string }>({});\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        // Get Me & Users\n        const users = await getApiService().getUsers();\n        setMe(\n          users.find(\n            (user) => user.address.toLowerCase() === account?.toLowerCase()\n          ) || null\n        );\n        setUsers(\n          users.filter(\n            (user) => user.address.toLowerCase() !== account?.toLowerCase()\n          )\n        );\n        setSumOfTokens(\n          users.reduce((sum, user) => sum + user.give_token_received, 0)\n        );\n\n        // Init Tokens\n        setTokenGifts([]);\n        setGiveTokens({});\n        setGiveNotes({});\n      } catch (error) {\n        enqueueSnackbar(\n          error.response?.data?.message || 'Something went wrong!',\n          { variant: 'error' }\n        );\n      }\n    };\n\n    const getPendingTokenGifts = async () => {\n      if (account) {\n        try {\n          // Get Pending Token Gifts\n          const tokenGifts = await getApiService().getPendingTokenGifts(\n            account\n          );\n          setTokenGifts(tokenGifts);\n\n          // Update GiveTokens & GiveNotes\n          tokenGifts.forEach((tokenGift) => {\n            giveTokens[tokenGift.recipient_id] = tokenGift.tokens;\n            giveNotes[tokenGift.recipient_id] = tokenGift.note;\n          });\n          setGiveTokens({ ...giveTokens });\n          setGiveNotes({ ...giveNotes });\n        } catch (error) {\n          enqueueSnackbar(\n            error.response?.data?.message || 'Something went wrong!',\n            { variant: 'error' }\n          );\n        }\n      }\n    };\n\n    const queryData = async () => {\n      setLoading(true);\n      await getUsers();\n      await getPendingTokenGifts();\n      setLoading(false);\n    };\n\n    queryData();\n  }, [account]);\n\n  // OnChange GiveToken Input\n  const onChangeGiveToken = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    id: number\n  ) => {\n    if (e.target.validity.valid) {\n      const newValue = Math.abs(Number(e.target.value));\n      e.target.value = String(newValue);\n      giveTokens[id] = newValue;\n      setGiveTokens({ ...giveTokens });\n    }\n  };\n\n  // OnChange GiveNote Input\n  const onChangeGiveNote = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    id: number\n  ) => {\n    giveNotes[id] = e.target.value;\n    setGiveNotes({ ...giveNotes });\n  };\n\n  // Save Allocations\n  const onClickSave = () => {\n    if (account) {\n      const postTokenGifts = async () => {\n        try {\n          // Post Token Gifts\n          const params: PostTokenGiftsParam[] = [];\n          users.forEach((user) =>\n            params.push({\n              tokens: giveTokens[user.id] || 0,\n              recipient_address: user.address,\n              circle_id: user.circle_id,\n              note: giveNotes[user.id] || '',\n            })\n          );\n\n          const userPendingGift = await getApiService().postTokenGifts(\n            account,\n            params,\n            library\n          );\n\n          setTokenGifts(userPendingGift.pending_sent_gifts);\n        } catch (error) {\n          enqueueSnackbar(\n            error.response?.data?.message || 'Something went wrong!',\n            { variant: 'error' }\n          );\n        }\n      };\n\n      const getUsers = async () => {\n        try {\n          // Get Me & Users\n          const users = await getApiService().getUsers();\n          setMe(\n            users.find(\n              (user) => user.address.toLowerCase() === account?.toLowerCase()\n            ) || null\n          );\n          setUsers(\n            users.filter(\n              (user) => user.address.toLowerCase() !== account?.toLowerCase()\n            )\n          );\n          setSumOfTokens(\n            users.reduce((sum, user) => sum + user.give_token_received, 0)\n          );\n        } catch (error) {\n          enqueueSnackbar(\n            error.response?.data?.message || 'Something went wrong!',\n            { variant: 'error' }\n          );\n        }\n      };\n\n      const queryData = async () => {\n        setLoading(true);\n        await postTokenGifts();\n        await getUsers();\n        setLoading(false);\n      };\n\n      queryData();\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <table className={classes.table}>\n        <colgroup>\n          <col className={classes.one} />\n          <col className={classes.two} />\n          <col className={classes.two} />\n          <col className={classes.three} />\n        </colgroup>\n        <thead>\n          <tr className={classes.trHeader}>\n            <th className={classes.th}>Contributor</th>\n            <th className={classes.th}>Estimated Distribution</th>\n            <th className={classes.th}>GIVE to allocate ↓</th>\n            <th className={classes.th}>Add a note</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user) => (\n            <tr className={classes.trBody} key={user.id}>\n              <td className={classes.tdName}>{user.name}</td>\n              <td className={classes.tdDistribution}>\n                {Math.round(\n                  (100 * user.give_token_received) / sumOfTokens\n                ).toFixed(1)}\n                % of GIVE\n              </td>\n              <td className={classes.tdAllocate}>\n                <input\n                  className={classes.inputGiveToken}\n                  min=\"0\"\n                  onChange={(e) => onChangeGiveToken(e, user.id)}\n                  pattern=\"[0-9]*\"\n                  type=\"number\"\n                  value={giveTokens[user.id] || 0}\n                ></input>\n              </td>\n              <td className={classes.tdNote}>\n                <input\n                  className={classes.inputGiveNote}\n                  maxLength={280}\n                  onChange={(e) => onChangeGiveNote(e, user.id)}\n                  placeholder=\"Why are you contributing?\"\n                  value={giveNotes[user.id] || ''}\n                ></input>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className={classes.footer}>\n        <p className={classes.balance}>\n          <span className={classes.balanceNumber}>\n            {tokenGifts.reduce((sum, tokenGift) => sum + tokenGift.tokens, 0)}\n          </span>{' '}\n          of{' '}\n          <span className={classes.balanceNumber}>\n            {tokenGifts.reduce(\n              (sum, tokenGift) => sum + tokenGift.tokens,\n              (me?.give_token_remaining || 0) + (me?.give_token_received || 0)\n            )}\n          </span>\n        </p>\n        <p className={classes.description}>GIVE Allocated</p>\n        <Button\n          className={classes.saveButton}\n          disabled={!me}\n          onClick={onClickSave}\n        >\n          Save Allocations\n        </Button>\n      </div>\n      {isLoading && (\n        <LoadingModal onClose={() => {}} text=\"\" visible={isLoading} />\n      )}\n    </div>\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/global.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/services/api.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/provider.ts",[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":1,"column":10,"nodeType":"215","messageId":"216","endLine":1,"endColumn":24},{"ruleId":"213","severity":1,"message":"217","line":1,"column":8,"nodeType":"215","messageId":"216","endLine":1,"endColumn":13},{"ruleId":"213","severity":1,"message":"218","line":3,"column":10,"nodeType":"215","messageId":"216","endLine":3,"endColumn":30},{"ruleId":"213","severity":1,"message":"219","line":5,"column":21,"nodeType":"215","messageId":"216","endLine":5,"endColumn":27},{"ruleId":"213","severity":1,"message":"220","line":7,"column":10,"nodeType":"215","messageId":"216","endLine":7,"endColumn":22},{"ruleId":"213","severity":1,"message":"221","line":8,"column":10,"nodeType":"215","messageId":"216","endLine":8,"endColumn":22},{"ruleId":"213","severity":1,"message":"222","line":10,"column":10,"nodeType":"215","messageId":"216","endLine":10,"endColumn":21},{"ruleId":"213","severity":1,"message":"223","line":12,"column":11,"nodeType":"215","messageId":"216","endLine":12,"endColumn":23},{"ruleId":"213","severity":1,"message":"224","line":62,"column":29,"nodeType":"215","messageId":"216","endLine":62,"endColumn":37},{"ruleId":"213","severity":1,"message":"225","line":6,"column":7,"nodeType":"215","messageId":"216","endLine":6,"endColumn":16},{"ruleId":"213","severity":1,"message":"226","line":6,"column":31,"nodeType":"215","messageId":"216","endLine":6,"endColumn":36},{"ruleId":"213","severity":1,"message":"227","line":12,"column":19,"nodeType":"215","messageId":"216","endLine":12,"endColumn":32},{"ruleId":"213","severity":1,"message":"228","line":3,"column":10,"nodeType":"215","messageId":"216","endLine":3,"endColumn":24},{"ruleId":"213","severity":1,"message":"229","line":8,"column":8,"nodeType":"215","messageId":"216","endLine":8,"endColumn":22},{"ruleId":"213","severity":1,"message":"226","line":5,"column":31,"nodeType":"215","messageId":"216","endLine":5,"endColumn":36},{"ruleId":"213","severity":1,"message":"230","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":17},{"ruleId":"213","severity":1,"message":"214","line":2,"column":19,"nodeType":"215","messageId":"216","endLine":2,"endColumn":33},{"ruleId":"213","severity":1,"message":"214","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":24},{"ruleId":"213","severity":1,"message":"227","line":52,"column":24,"nodeType":"215","messageId":"216","endLine":52,"endColumn":37},{"ruleId":"213","severity":1,"message":"227","line":33,"column":24,"nodeType":"215","messageId":"216","endLine":33,"endColumn":37},{"ruleId":"213","severity":1,"message":"231","line":3,"column":3,"nodeType":"215","messageId":"216","endLine":3,"endColumn":10},{"ruleId":"213","severity":1,"message":"226","line":4,"column":31,"nodeType":"215","messageId":"216","endLine":4,"endColumn":36},{"ruleId":"213","severity":1,"message":"227","line":29,"column":31,"nodeType":"215","messageId":"216","endLine":29,"endColumn":44},{"ruleId":"213","severity":1,"message":"232","line":3,"column":35,"nodeType":"215","messageId":"216","endLine":3,"endColumn":44},{"ruleId":"213","severity":1,"message":"233","line":8,"column":10,"nodeType":"215","messageId":"216","endLine":8,"endColumn":27},{"ruleId":"213","severity":1,"message":"227","line":154,"column":32,"nodeType":"215","messageId":"216","endLine":154,"endColumn":45},{"ruleId":"234","severity":1,"message":"235","line":230,"column":6,"nodeType":"236","endLine":230,"endColumn":15,"suggestions":"237"},"jsx-a11y/accessible-emoji",[],"@typescript-eslint/no-unused-vars","'transparentize' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'TOKEN_PRICE_DECIMALS' is defined but never used.","'ethers' is defined but never used.","'ERC20Service' is defined but never used.","'StakeService' is defined but never used.","'ZERO_NUMBER' is defined but never used.","'IBalanceInfo' is defined but never used.","'provider' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'theme' is defined but never used.","'props' is defined but never used.","'linearGradient' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'opacify' is defined but never used.","'Divider' is defined but never used.","'useGlobal' is defined but never used.","'isUnparsedPrepend' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'enqueueSnackbar', 'giveNotes', and 'giveTokens'. Either include them or remove the dependency array. You can also do a functional update 'setGiveTokens(g => ...)' if you only need 'giveTokens' in the 'setGiveTokens' call.","ArrayExpression",["238"],{"desc":"239","fix":"240"},"Update the dependencies array to be: [account, enqueueSnackbar, giveNotes, giveTokens]",{"range":"241","text":"242"},[5532,5541],"[account, enqueueSnackbar, giveNotes, giveTokens]"]