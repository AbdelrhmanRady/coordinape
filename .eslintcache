[{"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/index.tsx":"1","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/reportWebVitals.ts":"2","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/App.tsx":"3","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/index.ts":"4","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/contexts/index.ts":"5","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/shadows.ts":"6","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/custom.ts":"7","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/colors.ts":"8","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/typography.ts":"9","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/index.ts":"10","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/index.ts":"11","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/contexts/globalContext/index.tsx":"12","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/contexts/connectedWeb3/index.tsx":"13","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/HomePage/index.tsx":"14","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Loader/index.ts":"15","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Modal/index.ts":"16","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Button/index.ts":"17","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/connectors.ts":"18","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/config/constants.ts":"19","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/MainLayout/index.tsx":"20","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/AccountInfo/index.tsx":"21","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/enums.ts":"22","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/MainLayout/components/index.ts":"23","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Button/ConnectWalletButtonItem/index.tsx":"24","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Button/ConnectWalletButton/index.tsx":"25","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Modal/LoadingModal/index.tsx":"26","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/config/networks.ts":"27","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/styles/common.ts":"28","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/index.ts":"29","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/type-utils.ts":"30","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/MainLayout/components/Footer/index.tsx":"31","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/MainLayout/components/Header/index.tsx":"32","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Modal/ConnectWalletModal/index.tsx":"33","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Loader/LoadingScreen/index.tsx":"34","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/logger.ts":"35","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/HomePage/components/index.ts":"36","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/HomePage/components/HeaderSection/index.tsx":"37","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/HomePage/components/ContentSection/index.tsx":"38","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/global.ts":"39","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/services/api.ts":"40","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/provider.ts":"41","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/contexts/userInfoContext/index.tsx":"42","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/ReceiveInfo/index.tsx":"43","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/GraphPage/index.tsx":"44","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/TeamPage/index.tsx":"45","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/TeamPage/components/index.ts":"46","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/TeamPage/components/HeaderSection/index.tsx":"47","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/TeamPage/components/ContentSection/index.tsx":"48","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/routes/routes.tsx":"49","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/AllocationPage/index.tsx":"50","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/AllocationPage/components/index.ts":"51","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/AllocationPage/components/TeammateCard/index.tsx":"52","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/AllocationPage/components/MyProfileCard/index.tsx":"53","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Image/index.tsx":"54","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/ProfilePage/index.tsx":"55","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/ProfilePage/components/index.ts":"56","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/ProfilePage/components/OptInput/index.tsx":"57","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/image.ts":"58"},{"size":606,"mtime":1616032276000,"results":"59","hashOfConfig":"60"},{"size":425,"mtime":1613618017000,"results":"61","hashOfConfig":"60"},{"size":1050,"mtime":1616073288000,"results":"62","hashOfConfig":"60"},{"size":1771,"mtime":1616661931000,"results":"63","hashOfConfig":"60"},{"size":101,"mtime":1616032276000,"results":"64","hashOfConfig":"60"},{"size":3262,"mtime":1613618017000,"results":"65","hashOfConfig":"60"},{"size":90,"mtime":1616032276000,"results":"66","hashOfConfig":"60"},{"size":337,"mtime":1616682721000,"results":"67","hashOfConfig":"60"},{"size":631,"mtime":1616032276000,"results":"68","hashOfConfig":"60"},{"size":164,"mtime":1616433567000,"results":"69","hashOfConfig":"60"},{"size":30,"mtime":1613618017000,"results":"70","hashOfConfig":"60"},{"size":2822,"mtime":1613652659000,"results":"71","hashOfConfig":"60"},{"size":2511,"mtime":1613618017000,"results":"72","hashOfConfig":"60"},{"size":465,"mtime":1616440661000,"results":"73","hashOfConfig":"60"},{"size":33,"mtime":1613618017000,"results":"74","hashOfConfig":"60"},{"size":70,"mtime":1613618017000,"results":"75","hashOfConfig":"60"},{"size":82,"mtime":1613618017000,"results":"76","hashOfConfig":"60"},{"size":1263,"mtime":1613618017000,"results":"77","hashOfConfig":"60"},{"size":1109,"mtime":1616641590000,"results":"78","hashOfConfig":"60"},{"size":860,"mtime":1616464585000,"results":"79","hashOfConfig":"60"},{"size":3175,"mtime":1616676212000,"results":"80","hashOfConfig":"60"},{"size":168,"mtime":1613618017000,"results":"81","hashOfConfig":"60"},{"size":52,"mtime":1613618017000,"results":"82","hashOfConfig":"60"},{"size":1099,"mtime":1614173437000,"results":"83","hashOfConfig":"60"},{"size":1456,"mtime":1616676212000,"results":"84","hashOfConfig":"60"},{"size":1461,"mtime":1616032276000,"results":"85","hashOfConfig":"60"},{"size":2598,"mtime":1613618017000,"results":"86","hashOfConfig":"60"},{"size":1324,"mtime":1614261160000,"results":"87","hashOfConfig":"60"},{"size":1956,"mtime":1613618017000,"results":"88","hashOfConfig":"60"},{"size":297,"mtime":1613615465000,"results":"89","hashOfConfig":"60"},{"size":1519,"mtime":1616677478000,"results":"90","hashOfConfig":"60"},{"size":3830,"mtime":1616702678000,"results":"91","hashOfConfig":"60"},{"size":6550,"mtime":1616032276000,"results":"92","hashOfConfig":"60"},{"size":586,"mtime":1613618017000,"results":"93","hashOfConfig":"60"},{"size":229,"mtime":1613618017000,"results":"94","hashOfConfig":"60"},{"size":67,"mtime":1616439968000,"results":"95","hashOfConfig":"60"},{"size":1230,"mtime":1616683786000,"results":"96","hashOfConfig":"60"},{"size":2334,"mtime":1616440265000,"results":"97","hashOfConfig":"60"},{"size":51,"mtime":1616032276000,"results":"98","hashOfConfig":"60"},{"size":5175,"mtime":1616677802000,"results":"99","hashOfConfig":"60"},{"size":294,"mtime":1614073779000,"results":"100","hashOfConfig":"60"},{"size":1910,"mtime":1616092386000,"results":"101","hashOfConfig":"60"},{"size":4984,"mtime":1616677186000,"results":"102","hashOfConfig":"60"},{"size":10454,"mtime":1616686476000,"results":"103","hashOfConfig":"60"},{"size":445,"mtime":1616440706000,"results":"104","hashOfConfig":"60"},{"size":67,"mtime":1616034365000,"results":"105","hashOfConfig":"60"},{"size":1134,"mtime":1616036867000,"results":"106","hashOfConfig":"60"},{"size":12586,"mtime":1616703922000,"results":"107","hashOfConfig":"60"},{"size":2438,"mtime":1616700961000,"results":"108","hashOfConfig":"60"},{"size":10396,"mtime":1616717860000,"results":"109","hashOfConfig":"60"},{"size":65,"mtime":1616378928000,"results":"110","hashOfConfig":"60"},{"size":6510,"mtime":1616717683000,"results":"111","hashOfConfig":"60"},{"size":15405,"mtime":1616717746000,"results":"112","hashOfConfig":"60"},{"size":898,"mtime":1616680047000,"results":"113","hashOfConfig":"60"},{"size":6311,"mtime":1616700942000,"results":"114","hashOfConfig":"60"},{"size":28,"mtime":1616605223000,"results":"115","hashOfConfig":"60"},{"size":1695,"mtime":1616676212000,"results":"116","hashOfConfig":"60"},{"size":1156,"mtime":1616679344000,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"5jra5b",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"120"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"120"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"120"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"120"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"120"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"120"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"120"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/index.tsx",[],["245"],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/reportWebVitals.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/App.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/contexts/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/shadows.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/custom.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/colors.ts",["246"],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/theme/typography.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/contexts/globalContext/index.tsx",["247","248","249","250","251","252","253","254"],"import axios from 'axios';\nimport { ConnectWalletModal, LoadingModal } from 'components';\nimport { TOKEN_PRICE_DECIMALS } from 'config/constants';\nimport { useConnectedWeb3Context } from 'contexts/connectedWeb3';\nimport { BigNumber, ethers } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nimport { ERC20Service } from 'services/erc20';\nimport { StakeService } from 'services/stake';\nimport { KnownToken } from 'types';\nimport { ZERO_NUMBER } from 'utils/number';\n\ninterface IBalanceInfo {\n  ethBalance: BigNumber;\n  tokenBalances: {\n    [key in KnownToken]: BigNumber;\n  };\n  fssInTotal: BigNumber;\n  fmaInStaking: BigNumber;\n  ratioFMAFSS: BigNumber;\n  withdrawableDivends: BigNumber;\n}\n\nexport interface IGlobalData {\n  walletConnectModalOpened: boolean;\n  isLoading: boolean;\n  loadingText: string;\n}\n\nexport interface IGlobalDefaultData extends IGlobalData {\n  toggleWalletConnectModal: () => void;\n  setLoading: (loading: boolean, loadingText?: string) => void;\n}\n\nconst GlobalContext = React.createContext<IGlobalDefaultData>({\n  walletConnectModalOpened: false,\n  toggleWalletConnectModal: () => {},\n  isLoading: false,\n  loadingText: '',\n  setLoading: () => {},\n});\n\nexport const useGlobal = () => {\n  const context = React.useContext(GlobalContext);\n\n  if (!context) {\n    throw new Error('Component rendered outside the provider tree');\n  }\n\n  return context;\n};\n\ninterface IProps {\n  children: React.ReactNode | React.ReactNode[];\n}\n\nexport const GlobalProvider = (props: IProps) => {\n  const [state, setState] = useState<IGlobalData>({\n    walletConnectModalOpened: false,\n    isLoading: false,\n    loadingText: '',\n  });\n  const { account, library: provider, networkId } = useConnectedWeb3Context();\n\n  const loadAllData = async () => {};\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    loadAllData();\n  }, [networkId, account]);\n\n  const toggleWalletConnectModal = () => {\n    setState((prevState) => ({\n      ...prevState,\n      walletConnectModalOpened: !prevState.walletConnectModalOpened,\n    }));\n  };\n\n  const setLoading = (loading: boolean, loadingText?: string) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: loading,\n      loadingText: loadingText || '',\n    }));\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        ...state,\n        toggleWalletConnectModal,\n        setLoading,\n      }}\n    >\n      {props.children}\n      {state.walletConnectModalOpened && (\n        <ConnectWalletModal\n          onClose={toggleWalletConnectModal}\n          visible={state.walletConnectModalOpened}\n        />\n      )}\n      {state.isLoading && (\n        <LoadingModal\n          onClose={() => setLoading(false)}\n          text={state.loadingText}\n          visible={state.isLoading}\n        />\n      )}\n    </GlobalContext.Provider>\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/contexts/connectedWeb3/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/HomePage/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Loader/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Modal/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Button/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/connectors.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/config/constants.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/MainLayout/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/AccountInfo/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/enums.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/MainLayout/components/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Button/ConnectWalletButtonItem/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Button/ConnectWalletButton/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Modal/LoadingModal/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/config/networks.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/styles/common.ts",["255","256"],"import { makeStyles } from '@material-ui/core';\nimport { opacify, transparentize } from 'polished';\n\nconst useCommonStyles = makeStyles((theme) => ({\n  scroll: {\n    overflowY: 'auto',\n    '&::-webkit-scrollbar': {\n      width: theme.spacing(0.5),\n    },\n    '&::-webkit-scrollbar-track': {},\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: theme.colors.primary,\n    },\n  },\n  transparentButton: {\n    // backgroundColor: opacify(-0.9, theme.colors.white),\n    borderRadius: theme.spacing(0.75),\n    color: theme.colors.white,\n    // \"&:hover\": {\n    //   backgroundColor: opacify(-0.5, theme.colors.white),\n    // },\n  },\n  textAlignRight: {\n    textAlign: 'right',\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  fadeAnimation: {\n    transition: 'all 1s',\n    opacity: 0,\n    '&.visible': {\n      opacity: 1,\n    },\n  },\n  hideBelowWide: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none !important',\n    },\n  },\n  showBelowWide: {\n    [theme.breakpoints.up('md')]: {\n      display: 'none !important',\n    },\n  },\n  maxHeightTransition: {\n    overflow: 'hidden',\n    maxHeight: 0,\n    transition: 'max-height 0.5s cubic-bezier(0, 1, 0, 1)',\n    '&.visible': {\n      maxHeight: 2000,\n      transition: 'max-height 1s ease-in-out',\n    },\n  },\n}));\n\nexport default useCommonStyles;\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/type-utils.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/MainLayout/components/Footer/index.tsx",["257","258"],"import { Button, makeStyles } from '@material-ui/core';\nimport { transparentize } from 'polished';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: theme.custom.appFooterHeight,\n    display: 'flex',\n    justifyContent: 'center',\n    padding: `0 ${theme.spacing(4)}px`,\n    alignItems: 'center',\n    position: 'fixed',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    [theme.breakpoints.down('xs')]: {\n      padding: `0 ${theme.spacing(2)}px`,\n    },\n    background: theme.colors.primary,\n  },\n  balance: {\n    fontSize: 40,\n    color: theme.colors.white,\n  },\n  balanceNumber: {\n    fontWeight: 600,\n  },\n  description: {\n    marginLeft: 16,\n    fontSize: 20,\n    color: theme.colors.white,\n  },\n  saveButton: {\n    marginLeft: 44,\n    height: 35,\n    padding: '0px 37px',\n    borderRadius: 8,\n    background: theme.colors.selected,\n    fontSize: 18,\n    fontWeight: 600,\n    color: theme.colors.white,\n    '&:hover': {\n      backgroundColor: 'rgba(255, 255, 255, 0.7)',\n    },\n  },\n}));\n\ninterface IProps {\n  className?: string;\n}\n\nexport const Footer = (props: IProps) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <p className={classes.balance}>\n        <span className={classes.balanceNumber}>25</span> of{' '}\n        <span className={classes.balanceNumber}>100</span>\n      </p>\n      <p className={classes.description}>GIVE Allocated</p>\n      <Button className={classes.saveButton}>Save Allocations</Button>\n    </div>\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/layouts/MainLayout/components/Header/index.tsx",["259"],"import { makeStyles } from '@material-ui/core';\nimport { AccountInfo, ConnectWalletButton, ReceiveInfo } from 'components';\nimport { STORAGE_KEY_CONNECTOR } from 'config/constants';\nimport { useConnectedWeb3Context, useGlobal, useUserInfo } from 'contexts';\nimport { transparentize } from 'polished';\nimport React from 'react';\nimport { matchPath, useHistory } from 'react-router';\nimport { NavLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: theme.custom.appHeaderHeight,\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: `0 ${theme.spacing(6)}px`,\n    alignItems: 'center',\n    background: theme.colors.primary,\n    boxShadow: `0px 1px 2px ${transparentize(0.9, theme.colors.black)}`,\n    position: 'fixed',\n    left: 0,\n    right: 0,\n    top: 0,\n    [theme.breakpoints.down('xs')]: {\n      padding: `0 ${theme.spacing(2)}px`,\n    },\n    zIndex: 1,\n  },\n  img: {\n    height: 58,\n  },\n  buttons: {},\n  info: {\n    display: 'flex',\n  },\n  navLink: {\n    margin: `0 ${theme.spacing(4)}px`,\n    fontSize: 20,\n    fontWeight: 700,\n    color: theme.colors.white,\n    textDecoration: 'none',\n    padding: '6px 0',\n    position: 'relative',\n    '&::after': {\n      content: `\" \"`,\n      position: 'absolute',\n      left: '50%',\n      right: '50%',\n      backgroundColor: theme.colors.mediumRed,\n      transition: 'all 0.3s',\n      bottom: 0,\n      height: 2,\n    },\n    '&:hover': {\n      '&::after': {\n        left: 0,\n        right: 0,\n        backgroundColor: theme.colors.mediumRed,\n      },\n    },\n    '&.active': {\n      '&::after': {\n        left: 0,\n        right: 0,\n        backgroundColor: theme.colors.red,\n      },\n      '&:hover': {\n        '&::after': {\n          left: 0,\n          right: 0,\n          backgroundColor: theme.colors.red,\n        },\n      },\n    },\n  },\n}));\n\nconst navButtonsInfo = [\n  { path: '/allocation', label: 'Allocation' },\n  { path: '/map', label: 'Graph' },\n  // { path: '/history', label: 'History' },\n];\n\ninterface IProps {\n  className?: string;\n}\n\nexport const Header = (props: IProps) => {\n  const classes = useStyles();\n  const { account, rawWeb3Context } = useConnectedWeb3Context();\n  const { toggleWalletConnectModal } = useGlobal();\n  const connector = localStorage.getItem(STORAGE_KEY_CONNECTOR);\n  const { me } = useUserInfo();\n  const history = useHistory();\n\n  const navButtonsVisible = navButtonsInfo\n    .map((nav) => nav.path)\n    .map(\n      (path) => !!matchPath(history.location.pathname, { exact: true, path })\n    )\n    .reduce((s, e) => s || e);\n\n  const onDisconnect = () => {\n    rawWeb3Context.deactivate();\n    localStorage.removeItem(STORAGE_KEY_CONNECTOR);\n  };\n\n  return (\n    <div className={classes.root}>\n      <img\n        alt=\"logo\"\n        className={classes.img}\n        src=\"/svgs/logo/coordinape_logo.svg\"\n      />\n      {navButtonsVisible && (\n        <div>\n          {navButtonsInfo.map((nav) => (\n            <NavLink\n              className={classes.navLink}\n              isActive={() =>\n                !!matchPath(history.location.pathname, {\n                  exact: true,\n                  path: nav.path,\n                })\n              }\n              key={nav.path}\n              to={nav.path}\n            >\n              {nav.label}\n            </NavLink>\n          ))}\n        </div>\n      )}\n      <div className={classes.buttons}>\n        {!account ? (\n          <ConnectWalletButton onClick={toggleWalletConnectModal} />\n        ) : (\n          <div className={classes.info}>\n            {me ? <ReceiveInfo /> : ''}\n            <AccountInfo\n              address={account}\n              icon={connector || ''}\n              onDisconnect={onDisconnect}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Modal/ConnectWalletModal/index.tsx",["260"],"import {\n  CircularProgress,\n  Divider,\n  Grid,\n  IconButton,\n  Modal,\n  Typography,\n  makeStyles,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useWeb3React } from '@web3-react/core';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport { ConnectWalletButtonItem } from 'components';\nimport { STORAGE_KEY_CONNECTOR } from 'config/constants';\nimport React, { useEffect } from 'react';\nimport connectors from 'utils/connectors';\nimport { ConnectorNames } from 'utils/enums';\nimport { getLogger } from 'utils/logger';\n\nconst logger = getLogger('ConnectWalletModal::Index');\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  content: {\n    outline: 'none',\n    backgroundColor: theme.colors.third,\n    minWidth: 700,\n    maxWidth: 700,\n    borderRadius: theme.spacing(1),\n    padding: `${theme.spacing(2)}px`,\n    userSelect: `none`,\n    [theme.breakpoints.down('sm')]: {\n      minWidth: 350,\n      maxWidth: 350,\n    },\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: theme.spacing(2),\n  },\n  title: {\n    color: theme.colors.primary,\n    fontSize: theme.spacing(3),\n  },\n  closeButton: {\n    padding: theme.spacing(0.5),\n    color: theme.colors.primary,\n  },\n  bottom: {\n    padding: `0 ${theme.spacing(2)}px`,\n    textAlign: 'center',\n    '& > * + *': { marginTop: theme.spacing(1.5) },\n  },\n  helper: {\n    textAlign: 'center',\n    marginTop: theme.spacing(2),\n  },\n  loader: {\n    textAlign: 'center',\n  },\n}));\n\ninterface IProps {\n  visible: boolean;\n  onClose: () => void;\n}\n\nexport const ConnectWalletModal = (props: IProps) => {\n  const classes = useStyles();\n  const context = useWeb3React();\n  const { onClose, visible } = props;\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<any>();\n\n  useEffect(() => {\n    if (activatingConnector && activatingConnector === context.connector) {\n      setActivatingConnector(undefined);\n      onClose();\n    }\n    // eslint-disable-next-line\n  }, [activatingConnector, context.connector]);\n\n  if (context.error) {\n    localStorage.removeItem(STORAGE_KEY_CONNECTOR);\n    context.deactivate();\n    onClose();\n    logger.error('Error in web3 context', context.error);\n  }\n\n  const isMetamaskEnabled = 'ethereum' in window || 'web3' in window;\n\n  const onClickWallet = (wallet: ConnectorNames) => {\n    const currentConnector = connectors[wallet];\n    if (wallet === ConnectorNames.Injected) {\n      setActivatingConnector(currentConnector);\n    }\n    if (wallet === ConnectorNames.WalletConnect) {\n      setActivatingConnector(currentConnector);\n    }\n\n    if (wallet) {\n      if (\n        currentConnector instanceof WalletConnectConnector &&\n        currentConnector.walletConnectProvider?.wc?.uri\n      ) {\n        currentConnector.walletConnectProvider = undefined;\n      }\n      context.activate(currentConnector);\n      localStorage.setItem(STORAGE_KEY_CONNECTOR, wallet);\n    }\n  };\n\n  const isConnectingToWallet = !!activatingConnector;\n  let connectingText = `Connecting to wallet`;\n  const connectingToMetamask = activatingConnector === connectors.injected;\n  const connectingToWalletConnect =\n    activatingConnector === connectors.walletconnect;\n  if (connectingToMetamask) {\n    connectingText = 'Waiting for Approval on Metamask';\n  }\n  if (connectingToWalletConnect) {\n    connectingText = 'Opening QR for Wallet Connect';\n  }\n\n  const disableMetamask: boolean = !isMetamaskEnabled || false;\n\n  return (\n    <Modal\n      className={classes.modal}\n      disableBackdropClick={isConnectingToWallet}\n      onClose={onClose}\n      open={visible}\n    >\n      <div className={classes.content}>\n        <div className={classes.header}>\n          <Typography className={classes.title} component=\"h3\">\n            Sign In\n          </Typography>\n          <IconButton className={classes.closeButton} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n\n        {isConnectingToWallet ? (\n          <div className={classes.loader}>\n            <CircularProgress />\n            <Typography>{connectingText}</Typography>\n          </div>\n        ) : (\n          <div>\n            <Grid container spacing={1}>\n              <Grid item md={6} xs={12}>\n                <ConnectWalletButtonItem\n                  disabled={disableMetamask}\n                  icon={ConnectorNames.Injected}\n                  onClick={() => {\n                    onClickWallet(ConnectorNames.Injected);\n                  }}\n                  text=\"Metamask\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <ConnectWalletButtonItem\n                  disabled={isConnectingToWallet}\n                  icon={ConnectorNames.WalletConnect}\n                  onClick={() => {\n                    onClickWallet(ConnectorNames.WalletConnect);\n                  }}\n                  text=\"Wallet Connect\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <ConnectWalletButtonItem\n                  disabled={isConnectingToWallet}\n                  icon={ConnectorNames.WalletLink}\n                  onClick={() => {\n                    onClickWallet(ConnectorNames.WalletLink);\n                  }}\n                  text=\"Coinbase Wallet\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <ConnectWalletButtonItem\n                  disabled={isConnectingToWallet}\n                  icon={ConnectorNames.Fortmatic}\n                  onClick={() => {\n                    onClickWallet(ConnectorNames.Fortmatic);\n                  }}\n                  text=\"Fortmatic\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <ConnectWalletButtonItem\n                  disabled={isConnectingToWallet}\n                  icon={ConnectorNames.Portis}\n                  onClick={() => {\n                    onClickWallet(ConnectorNames.Portis);\n                  }}\n                  text=\"Portis\"\n                />\n              </Grid>\n            </Grid>\n          </div>\n        )}\n        <Typography className={classes.helper}>\n          New to Ethereum?{' '}\n          <a href=\"https://ethereum.org\">Learn more about wallets</a>\n        </Typography>\n      </div>\n    </Modal>\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Loader/LoadingScreen/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/logger.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/HomePage/components/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/HomePage/components/HeaderSection/index.tsx",["261","262","263","264","265"],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/HomePage/components/ContentSection/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/global.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/services/api.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/provider.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/contexts/userInfoContext/index.tsx",["266"],"import { LoadingModal } from 'components';\nimport { useConnectedWeb3Context } from 'contexts/connectedWeb3';\nimport React, { useEffect, useState } from 'react';\nimport { getApiService } from 'services/api';\nimport { IUser, Maybe } from 'types';\n\nexport interface IUserInfoData {\n  me: Maybe<IUser>;\n  users: IUser[];\n}\n\nconst UserInfoContext = React.createContext<\n  IUserInfoData & {\n    refreshUserInfo: () => Promise<void>;\n  }\n>({\n  me: null,\n  users: [],\n  refreshUserInfo: () =>\n    new Promise((resolve) => {\n      resolve();\n    }),\n});\n\nexport const useUserInfo = () => {\n  const context = React.useContext(UserInfoContext);\n\n  if (!context) {\n    throw new Error('Component rendered outside the provider tree');\n  }\n\n  return context;\n};\n\ninterface IProps {\n  children: React.ReactNode | React.ReactNode[];\n}\n\nexport const UserInfoProvider = (props: IProps) => {\n  const [state, setState] = useState<IUserInfoData>({\n    me: null,\n    users: [],\n  });\n  const { account } = useConnectedWeb3Context();\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const getUsers = async () => {\n    if (account) {\n      try {\n        const me = (await getApiService().getUsers(account))[0];\n        const users = await getApiService().getUsers();\n        setState({\n          me,\n          users: users.filter(\n            (user) => user.address.toLowerCase() !== account?.toLowerCase()\n          ),\n        });\n      } catch (error) {\n        setState({ me: null, users: [] });\n      }\n    } else {\n      setState({ me: null, users: [] });\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUsers();\n  }, [account]);\n\n  return (\n    <UserInfoContext.Provider value={{ ...state, refreshUserInfo: getUsers }}>\n      {props.children}\n      {isLoading && (\n        <LoadingModal onClose={() => {}} text=\"\" visible={isLoading} />\n      )}\n    </UserInfoContext.Provider>\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/ReceiveInfo/index.tsx",["267"],"import { Button, Popover, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useUserInfo } from 'contexts';\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport { getApiService } from 'services/api';\nimport { ITokenGift } from 'types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginRight: 8,\n    alignItems: 'center',\n  },\n  receiveButton: {\n    padding: '0 21px',\n    height: 42,\n    fontSize: 12,\n    fontWeight: 600,\n    color: theme.colors.text,\n    background:\n      'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(223, 237, 234, 0.4) 40.1%), linear-gradient(180deg, rgba(237, 253, 254, 0.4) 0%, rgba(207, 231, 233, 0) 100%), #FFFFFF',\n    borderRadius: 8,\n    display: 'flex',\n    textTransform: 'none',\n    '&.selected': {\n      color: theme.colors.selected,\n    },\n  },\n  popover: {\n    width: 300,\n    maxHeight: 550,\n    marginTop: 8,\n    padding: '27px 22px',\n    overflowY: 'auto',\n    borderRadius: 8,\n    background:\n      'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(223, 237, 234, 0.4) 40.1%), linear-gradient(180deg, rgba(237, 253, 254, 0.4) 0%, rgba(207, 231, 233, 0) 100%), #FFFFFF',\n    boxShadow: '0px 4px 6px rgba(181, 193, 199, 0.16)',\n  },\n  note: {\n    paddingTop: 8,\n    border: 'solid',\n    borderTopWidth: 0,\n    borderBottomWidth: 1,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: 'rgba(0, 0, 0, 0.2)',\n  },\n  noteHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  noteTitle: {\n    fontSize: 11,\n    fontWeight: 600,\n    color: theme.colors.selected,\n  },\n  noteDate: {\n    fontSize: 11,\n    fontWeight: 400,\n    color: 'rgba(94, 111, 116, 0.6)',\n  },\n  noteBody: {\n    padding: '10px 0',\n    fontSize: 13,\n    fontWeight: 400,\n    color: 'rgba(0, 0, 0, 0.7)',\n  },\n  noteEmptyBody: {\n    padding: '10px 0',\n    fontSize: 13,\n    fontWeight: 400,\n    color: 'rgba(0, 0, 0, 0.2)',\n  },\n}));\n\ninterface IProps {\n  className?: string;\n}\n\nexport const ReceiveInfo = (props: IProps) => {\n  const classes = useStyles();\n  const { me, refreshUserInfo, users } = useUserInfo();\n  const [tokenGifts, setTokenGifts] = useState<ITokenGift[]>([]);\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n\n  const getPendingTokens = async () => {\n    if (me?.address) {\n      try {\n        const tokenGifts = await getApiService().getPendingTokenGifts(\n          undefined,\n          me.address\n        );\n        setTokenGifts(tokenGifts);\n      } catch (error) {\n        error;\n      }\n    } else {\n      setTokenGifts([]);\n    }\n  };\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    getPendingTokens();\n    refreshUserInfo();\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'note-popover' : undefined;\n\n  return (\n    <div className={classes.root}>\n      <Button\n        aria-describedby={id}\n        className={\n          !anchorEl\n            ? classes.receiveButton\n            : clsx(classes.receiveButton, 'selected')\n        }\n        onClick={handleClick}\n      >\n        {me?.give_token_received || 0}{' '}\n        {(me?.give_token_received || 0) > 1\n          ? 'GIVES Received'\n          : 'GIVE Received'}\n      </Button>\n      <Popover\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        classes={{\n          paper: classes.popover,\n        }}\n        id={id}\n        onClose={handleClose}\n        open={open}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        {tokenGifts\n          .filter(\n            (tokenGift) => tokenGift.tokens > 0 || tokenGift.note.length > 0\n          )\n          .sort((a, b) => +new Date(b.updated_at) - +new Date(a.updated_at))\n          .map((tokenGift) => (\n            <div className={classes.note} key={tokenGift.id}>\n              <div className={classes.noteHeader}>\n                <div className={classes.noteTitle}>\n                  {tokenGift.tokens > 0\n                    ? `+${tokenGift.tokens} Received from `\n                    : 'From '}\n                  {users.find((user) => user.id === tokenGift.sender_id)\n                    ?.name || 'Unknown'}\n                </div>\n                <div className={classes.noteDate}>\n                  {moment(tokenGift.updated_at).format('MMM ‘D')}\n                </div>\n              </div>\n              <div\n                className={\n                  tokenGift.note.length > 0\n                    ? classes.noteBody\n                    : classes.noteEmptyBody\n                }\n              >\n                {tokenGift.note.length > 0\n                  ? `“${tokenGift.note}”`\n                  : '-- Empty Note --'}\n              </div>\n            </div>\n          ))}\n      </Popover>\n    </div>\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/GraphPage/index.tsx",["268","269","270","271","272","273"],"import { MenuItem, Select, makeStyles } from '@material-ui/core';\nimport { useUserInfo } from 'contexts';\nimport { forceLink } from 'd3-force-3d';\nimport fromPairs from 'lodash/fromPairs';\nimport uniq from 'lodash/uniq';\nimport { useSnackbar } from 'notistack';\nimport { important } from 'polished';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport ForceGraph2D from 'react-force-graph-2d';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { getApiService } from 'services/api';\nimport { ITokenGift, IUser } from 'types';\n\nconst NODE_R = 8;\n\nconst EPOCH_VALUES = {\n  CURRENT: 'Current Epoch',\n  PAST: 'Past Epochs',\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    height: '100%',\n  },\n  autoSizer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n  controls: {\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px`,\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  epochSelectRoot: {\n    fontSize: 20,\n    fontWeight: 700,\n    color: theme.colors.red,\n    '&:hover': {\n      '&::before': {\n        borderBottomColor: `${theme.colors.red} !important`,\n      },\n    },\n    '&::after': {\n      borderBottomColor: `${theme.colors.transparent} !important`,\n    },\n  },\n  epochSelect: {\n    color: theme.colors.red,\n  },\n  epochSelectIcon: {\n    fill: theme.colors.red,\n  },\n  epochSelectMenuPaper: {\n    background:\n      'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(223, 237, 234, 0.4) 40.1%), linear-gradient(180deg, rgba(237, 253, 254, 0.4) 0%, rgba(207, 231, 233, 0) 100%), #FFFFFF',\n  },\n  epochMenuItem: {\n    fontSize: 18,\n    fontWeight: 500,\n    color: theme.colors.text,\n  },\n  epochMenuItemSelected: {\n    background: `${theme.colors.third} !important`,\n  },\n}));\n\ninterface ILink {\n  source: number;\n  target: number;\n  width: number;\n  curvature: number;\n}\n\ninterface IProps {\n  className?: string;\n}\n\nfunction linkStrengthToken(link: any) {\n  return 0.2 / link.tokens;\n}\n\nfunction linkStrengthCounts(link: any) {\n  return 0.5 / (link.source.linkCount + link.target.linkCount);\n}\n\nconst GraphPage = (props: IProps) => {\n  const fgRef = useRef<any>(null);\n  const hoverNode = useRef<any>(null);\n  const highlightReceiveNodes = useRef<Set<any>>(new Set());\n  const highlightGiveNodes = useRef<Set<any>>(new Set());\n  const highlightReceiveLinks = useRef<Set<any>>(new Set());\n  const highlightGiveLinks = useRef<Set<any>>(new Set());\n\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const [pastGifts, setPastGifts] = useState<ITokenGift[]>([]);\n  const [pendingGifts, setPendingGifts] = useState<ITokenGift[]>([]);\n\n  const [gifts, setGifts] = useState<ITokenGift[]>([]);\n  const [links, setLinks] = useState<any[]>([]);\n  const [nodes, setNodes] = useState<any[]>([]);\n  const [epoch, setEpoch] = useState<any>(EPOCH_VALUES.CURRENT);\n  const { me, refreshUserInfo, users } = useUserInfo();\n\n  const showMagnitudes = epoch === EPOCH_VALUES.PAST;\n\n  const fetchGifts = async () => {\n    try {\n      const [pending, past] = await Promise.all([\n        getApiService().getPendingTokenGifts(),\n        getApiService().getTokenGifts(),\n      ]);\n      setPastGifts(past);\n      setPendingGifts(pending);\n    } catch (error) {\n      enqueueSnackbar(\n        error.response?.data?.message || 'Something went wrong!',\n        { variant: 'error' }\n      );\n      setPastGifts([]);\n      setPendingGifts([]);\n    }\n  };\n\n  const configureForces = () => {\n    const fl = forceLink().strength(\n      showMagnitudes ? linkStrengthToken : linkStrengthCounts\n    );\n    fgRef.current.d3Force('link', fl);\n  };\n\n  const initialize = () => {\n    if (gifts.length === 0 || users.length === 0 || !me) {\n      return;\n    }\n\n    const images = fromPairs(\n      uniq(users.concat(me).map((u) => u.avatar)).map((avatar) => {\n        const img = new Image();\n        img.src = avatar\n          ? (process.env.REACT_APP_S3_BASE_URL as string) + avatar\n          : '/imgs/avatar/placeholder.jpg';\n        return [avatar ?? '/imgs/avatar/placeholder.jpg', img];\n      })\n    );\n\n    const allUsers = users.concat(me).map((u) => ({\n      ...u,\n      img: images[u.avatar ?? '/imgs/avatar/placeholder.jpg'],\n      receiverLinks: [] as any,\n      giverLinks: [] as any,\n      givers: [] as any,\n      receivers: [] as any,\n      linkCount: 0,\n    }));\n\n    const userByAddr: { [key: string]: IUser } = {};\n    const userById: { [key: number]: IUser } = {};\n    const orderedIdByAddr: { [key: string]: number } = {};\n    const orderedId: { [key: number]: number } = {};\n    const names: string[] = [];\n    const matrix: number[][] = [];\n\n    for (let i = 0; i < allUsers.length; i++) {\n      const user = allUsers[i];\n      userByAddr[user.address] = user;\n      userById[user.id] = user;\n      orderedIdByAddr[user.address] = i;\n      orderedId[user.id] = i;\n      names[i] = user.name.replace(/\\([^)]*\\)/, '');\n    }\n\n    for (let i = 0; i < allUsers.length; i++) {\n      matrix[i] = [];\n      for (let j = 0; j < allUsers.length; j++) {\n        matrix[i][j] = 0;\n      }\n    }\n\n    for (const { recipient_id, sender_id, tokens } of gifts) {\n      if (tokens > 0)\n        matrix[orderedId[sender_id]][orderedId[recipient_id]] = tokens;\n    }\n\n    // Using the DB id for links, rather than orderedId\n    const links = gifts\n      .filter(({ tokens }) => tokens > 0)\n      .map(({ recipient_id, sender_id, tokens }) => ({\n        source: sender_id,\n        target: recipient_id,\n        width: tokens / 3,\n        tokens,\n        curvature:\n          matrix[orderedId[recipient_id]][orderedId[sender_id]] > 0 ? 0.1 : 0,\n      }));\n\n    for (let i = 0; i < allUsers.length; i++) {\n      const me = allUsers[i];\n      // Giving to me\n      me.giverLinks = links.filter((link) => link.target === me.id);\n      me.givers = me.giverLinks.map((l: ILink) => userById[l.source]);\n      // Receiving from me\n      me.receiverLinks = links.filter((link) => link.source === me.id);\n      me.receivers = me.receiverLinks.map((l: ILink) => userById[l.target]);\n      ////\n      me.linkCount = me.giverLinks.length + me.receiverLinks.length;\n    }\n\n    configureForces();\n    setLinks(links);\n    setNodes(allUsers);\n  };\n\n  const nodeCanvasObject = useCallback((node: any, ctx: any) => {\n    const centX = node.x; // Math.floor(node.x);\n    const centY = node.y; // Math.floor(node.y);\n    let strokeColor = 'black';\n    const width = Math.min(Math.max(2, node.give_token_received / 20), 5);\n    if (node === hoverNode.current) strokeColor = '#239ab4';\n    if (highlightGiveNodes.current.has(node)) strokeColor = '#2cc517';\n    if (highlightReceiveNodes.current.has(node)) strokeColor = '#741faf';\n\n    ctx.beginPath();\n    ctx.arc(node.x, node.y, NODE_R + 0.5 * width, 0, 2 * Math.PI);\n    ctx.strokeStyle = strokeColor;\n    ctx.lineWidth = width;\n    ctx.stroke();\n    ctx.closePath();\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(node.x, node.y, NODE_R, 0, 2 * Math.PI);\n    ctx.fillStyle = 'black';\n    ctx.fill();\n    ctx.clip();\n\n    try {\n      ctx.drawImage(\n        node.img,\n        centX - NODE_R,\n        centY - NODE_R,\n        NODE_R * 2,\n        NODE_R * 2\n      );\n    } catch (error) {\n      // console.error(node.avatar);\n    }\n    ctx.restore();\n  }, []);\n\n  const linkColor = useCallback((link: any) => {\n    let color = '#00000010';\n    if (highlightReceiveLinks.current.has(link)) color = '#741faf50';\n    if (highlightGiveLinks.current.has(link)) color = '#2cc51750';\n    return color;\n  }, []);\n\n  const linkDirectionalParticleWidth = useCallback(\n    (link: any) => {\n      if (\n        highlightReceiveLinks.current.has(link) ||\n        highlightGiveLinks.current.has(link)\n      ) {\n        return showMagnitudes ? Math.max(link.tokens / 10, 3) : 4;\n      }\n      return 0;\n    },\n    [epoch]\n  );\n\n  const getWidth = (link: any) => (showMagnitudes ? link.width : 4);\n\n  const onNodeClick = useCallback((node: any) => {\n    highlightReceiveNodes.current.clear();\n    highlightGiveNodes.current.clear();\n    highlightReceiveLinks.current.clear();\n    highlightGiveLinks.current.clear();\n    if (node === hoverNode.current) {\n      hoverNode.current = null;\n      return;\n    }\n    if (node) {\n      node.receivers.forEach((other: any) =>\n        highlightReceiveNodes.current.add(other)\n      );\n      node.givers.forEach((other: any) =>\n        highlightGiveNodes.current.add(other)\n      );\n      node.giverLinks.forEach((l: ILink) => highlightGiveLinks.current.add(l));\n      node.receiverLinks.forEach((l: ILink) =>\n        highlightReceiveLinks.current.add(l)\n      );\n      hoverNode.current = node;\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchGifts();\n  }, []);\n\n  useEffect(() => {\n    setGifts(epoch === EPOCH_VALUES.CURRENT ? pendingGifts : pastGifts);\n  }, [epoch, pastGifts, pendingGifts]);\n\n  useEffect(() => {\n    if (fgRef.current) {\n      initialize();\n    }\n  }, [gifts, users, me]);\n\n  return (\n    <div className={classes.root}>\n      <AutoSizer className={classes.autoSizer}>\n        {({ height, width }) => (\n          <ForceGraph2D\n            graphData={{ nodes, links }}\n            height={height}\n            linkColor={linkColor}\n            linkCurvature=\"curvature\"\n            linkDirectionalParticleWidth={linkDirectionalParticleWidth}\n            linkDirectionalParticles={4}\n            linkWidth={getWidth}\n            nodeCanvasObject={nodeCanvasObject}\n            nodeRelSize={NODE_R}\n            onNodeClick={onNodeClick}\n            ref={fgRef}\n            width={width}\n          />\n        )}\n      </AutoSizer>\n      <div className={classes.controls}>\n        <Select\n          MenuProps={{\n            classes: {\n              paper: classes.epochSelectMenuPaper,\n            },\n          }}\n          className={classes.epochSelectRoot}\n          classes={{\n            select: classes.epochSelect,\n            icon: classes.epochSelectIcon,\n          }}\n          onChange={({ target: { value } }) => setEpoch(value)}\n          value={epoch}\n        >\n          {Object.values(EPOCH_VALUES).map((value) => (\n            <MenuItem\n              className={classes.epochMenuItem}\n              classes={{ selected: classes.epochMenuItemSelected }}\n              key={value}\n              value={value}\n            >\n              {value}\n            </MenuItem>\n          ))}\n        </Select>\n      </div>\n    </div>\n  );\n};\n\nexport default GraphPage;\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/TeamPage/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/TeamPage/components/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/TeamPage/components/HeaderSection/index.tsx",["274"],"import { makeStyles } from '@material-ui/core';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    paddingTop: 70,\n    maxWidth: '80%',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 54,\n    fontWeight: 700,\n    color: theme.colors.primary,\n    margin: 0,\n  },\n  subTitle: {\n    padding: '7px 32px',\n    fontSize: 27,\n    fontWeight: 400,\n    color: theme.colors.primary,\n    margin: 0,\n  },\n  description: {\n    padding: '0 100px',\n    fontSize: 16,\n    fontWeight: 400,\n    color: theme.colors.primary,\n    margin: 0,\n  },\n  warning: {\n    marginBottom: 32,\n    fontSize: 24,\n    fontWeight: 500,\n    color: theme.colors.secondary,\n    margin: 0,\n  },\n}));\n\ninterface IProps {\n  className?: string;\n}\n\nexport const HeaderSection = (props: IProps) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <p className={classes.title}>Who have you been working with recently?</p>\n      <p className={classes.subTitle}>\n        Select your teammates so you can thank them with GIVE\n      </p>\n    </div>\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/TeamPage/components/ContentSection/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/routes/routes.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/AllocationPage/index.tsx",["275","276"],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/AllocationPage/components/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/AllocationPage/components/TeammateCard/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/AllocationPage/components/MyProfileCard/index.tsx",["277","278","279"],"import {\n  Button,\n  FormControlLabel,\n  Radio,\n  Tooltip,\n  Zoom,\n  makeStyles,\n  withStyles,\n} from '@material-ui/core';\nimport { ReactComponent as AlertCircleSVG } from 'assets/svgs/button/alert-circle.svg';\nimport { ReactComponent as CheckedRadioSVG } from 'assets/svgs/button/checked-radio.svg';\nimport { ReactComponent as EditProfileSVG } from 'assets/svgs/button/edit-profile.svg';\nimport { ReactComponent as SaveProfileSVG } from 'assets/svgs/button/save-profile.svg';\nimport { ReactComponent as UnCheckedRadioSVG } from 'assets/svgs/button/unchecked-radio.svg';\nimport { ReactComponent as UploadImageSVG } from 'assets/svgs/button/upload-image.svg';\nimport clsx from 'clsx';\nimport { Img, LoadingModal } from 'components';\nimport { MAX_BIO_LENGTH, MAX_NAME_LENGTH } from 'config/constants';\nimport { useConnectedWeb3Context, useUserInfo } from 'contexts';\nimport { useSnackbar } from 'notistack';\nimport React, { useEffect, useState } from 'react';\nimport { getApiService } from 'services/api';\nimport { PutUsersParam } from 'types';\nimport { blobToFile, resizeImage } from 'utils/image';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    width: 270,\n    height: 360,\n    margin: theme.spacing(1),\n    paddingTop: theme.spacing(1.5),\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    display: 'inline-block',\n    alignItems: 'center',\n    background: '#DFE7E8',\n    borderRadius: 10.75,\n    wordBreak: 'break-all',\n    textAlign: 'center',\n  },\n  avatar: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    fontSize: 12,\n    fontWeight: 400,\n    border: `1.34426px solid ${theme.colors.border}`,\n  },\n  uploadImageContainer: {\n    position: 'relative',\n    width: 60,\n    height: 60,\n    margin: 'auto',\n    borderRadius: 30,\n    fontSize: 12,\n    fontWeight: 400,\n    '&:after': {\n      content: `\" \"`,\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      top: 0,\n      left: 0,\n      borderRadius: '50%',\n      background: 'rgba(0,0,0,0.6)',\n      opacity: 0.7,\n      transition: 'all 0.5s',\n      '-webkit-transition': 'all 0.5s',\n    },\n    '&:hover': {\n      '&:after': {\n        opacity: 1,\n      },\n      '& .upload-image-icon': {\n        background: 'rgba(81, 99, 105, 0.9)',\n      },\n    },\n  },\n  uploadImageIconWrapper: {\n    position: 'absolute',\n    left: 'calc(50% - 11px)',\n    top: 'calc(50% - 11px)',\n    width: 22,\n    height: 22,\n    borderRadius: 11,\n    background: 'none',\n    cursor: 'pointer',\n    zIndex: 2,\n  },\n  name: {\n    height: 29,\n    marginTop: 0,\n    marginBottom: 0,\n    fontSize: 24,\n    fontWeight: 600,\n    color: theme.colors.text,\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n  bioContainer: {\n    height: 80,\n    marginTop: theme.spacing(0.5),\n    marginBottom: 0,\n  },\n  bio: {\n    fontSize: 14,\n    fontWeight: 600,\n    color: 'rgba(81, 99, 105, 0.5)',\n    overflow: 'hidden',\n    display: '-webkit-box',\n    wordBreak: 'break-word',\n    '-webkit-line-clamp': 4,\n    '-webkit-box-orient': 'vertical',\n  },\n  nameInput: {\n    width: '100%',\n    marginTop: 0,\n    marginBottom: 0,\n    fontSize: 24,\n    fontWeight: 600,\n    color: theme.colors.text,\n    background: 'none',\n    border: 0,\n    outline: 'none',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textDecorationLine: 'underline',\n    textAlign: 'center',\n    '&::placeholder': {\n      opacity: 0.3,\n    },\n  },\n  bioTextareaContainer: {\n    height: 110,\n    marginTop: 6,\n    padding: 11,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    background: 'rgba(81, 99, 105, 0.2)',\n    borderRadius: 8,\n  },\n  bioTextarea: {\n    width: '100%',\n    height: '100%',\n    padding: 0,\n    resize: 'none',\n    fontSize: 14,\n    fontWeight: 600,\n    color: theme.colors.text,\n    background: 'none',\n    border: 0,\n    borderRadius: 0,\n    outline: 'none',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    wordBreak: 'break-word',\n    '&::placeholder': {\n      opacity: 0.3,\n      textAlign: 'center',\n    },\n  },\n  bioLengthLabel: {\n    marginTop: 6,\n    marginBottom: 0,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    fontSize: 12,\n    fontWeight: 500,\n    color: 'rgba(81, 99, 105, 0.2)',\n  },\n  optContainer: {\n    marginTop: theme.spacing(2),\n    paddingLeft: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  radioInput: {\n    height: 18,\n    width: 18,\n    padding: 0,\n  },\n  radioLabel: {\n    margin: `${theme.spacing(0.5)}px 0`,\n    paddingLeft: theme.spacing(1),\n    fontSize: 14,\n    color: 'rgba(81, 99, 105, 0.5)',\n    '&:hover': {\n      color: 'rgba(81, 99, 105, 0.85)',\n    },\n    '&:checked': {\n      color: theme.colors.text,\n    },\n  },\n  alertContainer: {\n    marginTop: theme.spacing(0.5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  alertLabel: {\n    margin: `${theme.spacing(0.5)}px 0`,\n    fontSize: 12,\n    fontWeight: 700,\n    color: 'rgba(81, 99, 105, 0.3)',\n    textDecoration: 'underline',\n  },\n  buttonLabel: {\n    paddingTop: 2,\n    marginLeft: 10,\n  },\n  backButton: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    marginTop: 8,\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'rgba(81, 99, 105, 0.5)',\n    '&:hover': {\n      background: 'none',\n    },\n  },\n  editButton: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    marginBottom: theme.spacing(2),\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: 'rgba(81, 99, 105, 0.5)',\n    textTransform: 'none',\n    '&:hover': {\n      background: 'none',\n      textDecoration: 'underline',\n    },\n  },\n  saveButton: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    marginBottom: theme.spacing(2),\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    fontSize: 12,\n    fontWeight: 'bold',\n    textTransform: 'none',\n    color: 'rgba(81, 99, 105, 0.5)',\n    '&:hover': {\n      background: 'none',\n      color: theme.colors.text,\n    },\n    '&:disabled': {\n      color: 'rgba(81, 99, 105, 0.5)',\n      opacity: 0.3,\n    },\n  },\n}));\n\nconst TextOnlyTooltip = withStyles({\n  tooltip: {\n    margin: 'auto',\n    padding: `4px 8px`,\n    maxWidth: 240,\n    fontSize: 10,\n    fontWeight: 500,\n    color: 'rgba(81, 99, 105, 0.5)',\n    background: '#C3CDCF',\n  },\n})(Tooltip);\n\ninterface IProfileData {\n  avatar: string;\n  avatarRaw: File | null;\n  name: string;\n  bio: string;\n  non_receiver: number;\n}\n\nexport const MyProfileCard = () => {\n  const classes = useStyles();\n  const { library } = useConnectedWeb3Context();\n  const { me, refreshUserInfo } = useUserInfo();\n  const [isEditing, setEditing] = useState<boolean>(false);\n  const [profileData, setProfileData] = useState<IProfileData>({\n    avatar: (process.env.REACT_APP_S3_BASE_URL as string) + (me?.avatar || ''),\n    avatarRaw: null,\n    name: me?.name || '',\n    bio: me?.bio || '',\n    non_receiver: me?.non_receiver || 0,\n  });\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  // onChange Avatar\n  const onChangeAvatar = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length) {\n      setProfileData({\n        ...profileData,\n        avatar: URL.createObjectURL(e.target.files[0]),\n        avatarRaw: e.target.files[0],\n      });\n    }\n  };\n\n  // onChange Name\n  const onChangeName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setProfileData({ ...profileData, name: e.target.value });\n  };\n\n  // onChange Bio\n  const onChangeBio = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setProfileData({ ...profileData, bio: e.target.value });\n  };\n\n  // onClick SaveProfile\n  const onClickSaveProfile = () => {\n    if (me?.address && me?.circle_id) {\n      if (\n        profileData.name.length === 0 ||\n        (profileData.name === (me?.name || '') &&\n          profileData.bio === (me?.bio || '') &&\n          profileData.non_receiver === (me?.non_receiver || 0) &&\n          !profileData.avatarRaw)\n      ) {\n        return;\n      }\n\n      const postUploadImage = async () => {\n        if (profileData.avatarRaw) {\n          try {\n            await getApiService().postUploadImage(\n              me?.address,\n              profileData.avatarRaw,\n              library\n            );\n          } catch (error) {\n            enqueueSnackbar(\n              error.response?.data?.message || 'Something went wrong!',\n              { variant: 'error' }\n            );\n          }\n        }\n      };\n\n      const putUsers = async () => {\n        if (\n          profileData.name !== (me?.name || '') ||\n          profileData.bio !== (me?.bio || '') ||\n          profileData.non_receiver !== (me?.non_receiver || 0)\n        ) {\n          try {\n            const params: PutUsersParam = {\n              name: profileData.name,\n              bio: profileData.bio,\n              non_receiver: profileData.non_receiver,\n              address: me?.address,\n              circle_id: me?.circle_id,\n            };\n\n            await getApiService().putUsers(me?.address, params, library);\n          } catch (error) {\n            enqueueSnackbar(\n              error.response?.data?.message || 'Something went wrong!',\n              { variant: 'error' }\n            );\n          }\n        }\n      };\n\n      const queryData = async () => {\n        setLoading(true);\n        await postUploadImage();\n        await putUsers();\n        await refreshUserInfo();\n        setEditing(false);\n        setLoading(false);\n      };\n\n      queryData();\n    }\n  };\n\n  // Return\n  return (\n    me && (\n      <div className={classes.root}>\n        {isEditing ? (\n          <>\n            <Button\n              className={classes.backButton}\n              disableRipple={true}\n              onClick={() => setEditing(false)}\n            >\n              ←\n            </Button>\n            <div className={classes.uploadImageContainer}>\n              <label htmlFor=\"upload-avatar-button\">\n                <Img\n                  alt=\"avatar\"\n                  className={classes.avatar}\n                  placeholderImg=\"/imgs/avatar/placeholder.jpg\"\n                  src={profileData.avatar}\n                />\n                <div\n                  className={clsx(\n                    classes.uploadImageIconWrapper,\n                    'upload-image-icon'\n                  )}\n                >\n                  <UploadImageSVG />\n                </div>\n              </label>\n              <input\n                id=\"upload-avatar-button\"\n                onChange={onChangeAvatar}\n                style={{ display: 'none' }}\n                type=\"file\"\n              />\n            </div>\n            <input\n              className={classes.nameInput}\n              maxLength={MAX_NAME_LENGTH}\n              onChange={onChangeName}\n              placeholder=\"Your name ...\"\n              value={profileData.name}\n            />\n            <div className={classes.bioTextareaContainer}>\n              <textarea\n                className={classes.bioTextarea}\n                maxLength={MAX_BIO_LENGTH}\n                onChange={onChangeBio}\n                placeholder=\"Tell us about yourself, what you do and why you do it\"\n                value={profileData.bio}\n              />\n              <p\n                className={classes.bioLengthLabel}\n              >{`${profileData.bio.length}/${MAX_BIO_LENGTH}`}</p>\n            </div>\n            <div className={classes.optContainer}>\n              <FormControlLabel\n                control={\n                  <Radio\n                    checked={profileData.non_receiver === 0}\n                    checkedIcon={<CheckedRadioSVG />}\n                    className={classes.radioInput}\n                    icon={<UnCheckedRadioSVG />}\n                    onChange={() =>\n                      setProfileData({ ...profileData, non_receiver: 0 })\n                    }\n                  />\n                }\n                label={\n                  <p className={classes.radioLabel}>Opt in to receiving GIVE</p>\n                }\n              />\n              <FormControlLabel\n                control={\n                  <Radio\n                    checked={profileData.non_receiver !== 0}\n                    checkedIcon={<CheckedRadioSVG />}\n                    className={classes.radioInput}\n                    icon={<UnCheckedRadioSVG />}\n                    onChange={() =>\n                      setProfileData({ ...profileData, non_receiver: 1 })\n                    }\n                  />\n                }\n                label={\n                  <p className={classes.radioLabel}>\n                    Opt out to receiving GIVE\n                  </p>\n                }\n              />\n            </div>\n            <Button\n              className={classes.saveButton}\n              disableRipple={true}\n              disabled={\n                profileData.name.length === 0 ||\n                (profileData.name === (me.name || '') &&\n                  profileData.bio === (me.bio || '') &&\n                  profileData.non_receiver === (me.non_receiver || 0) &&\n                  !profileData.avatarRaw)\n              }\n              onClick={onClickSaveProfile}\n            >\n              <SaveProfileSVG />\n              <div className={classes.buttonLabel}>Save My Profile</div>\n            </Button>\n          </>\n        ) : (\n          <>\n            <Img\n              alt=\"avatar\"\n              className={classes.avatar}\n              placeholderImg=\"/imgs/avatar/placeholder.jpg\"\n              src={(process.env.REACT_APP_S3_BASE_URL as string) + me.avatar}\n            />\n            <p className={classes.name}>{me.name}</p>\n            <div className={classes.bioContainer}>\n              <p className={classes.bio}>{me.bio}</p>\n            </div>\n            {me.non_receiver !== 0 && (\n              <div className={classes.alertContainer}>\n                <TextOnlyTooltip\n                  TransitionComponent={Zoom}\n                  placement=\"top-start\"\n                  title=\"You opted out of receiving GIVE. You are paid through other channels or are not currently active.\"\n                >\n                  <AlertCircleSVG />\n                </TextOnlyTooltip>\n                <p className={classes.alertLabel}>\n                  You opted out of receiving GIVE\n                </p>\n              </div>\n            )}\n            <Button\n              className={classes.editButton}\n              disableRipple={true}\n              onClick={() => {\n                setProfileData({\n                  avatar:\n                    (process.env.REACT_APP_S3_BASE_URL as string) +\n                    (me?.avatar || ''),\n                  avatarRaw: null,\n                  name: me?.name || '',\n                  bio: me?.bio || '',\n                  non_receiver: me?.non_receiver || 0,\n                });\n                setEditing(true);\n              }}\n            >\n              <EditProfileSVG />\n              <div className={classes.buttonLabel}>Edit My Profile</div>\n            </Button>\n          </>\n        )}\n        {isLoading && (\n          <LoadingModal onClose={() => {}} text=\"\" visible={isLoading} />\n        )}\n      </div>\n    )\n  );\n};\n","/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/components/Image/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/ProfilePage/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/ProfilePage/components/index.ts",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/pages/ProfilePage/components/OptInput/index.tsx",[],"/Volumes/Workspace/Blockchain/Yearn/YFI Coordinape /yearn-coordinape-app/src/utils/image.ts",[],{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","severity":1,"message":"283","line":1,"column":10,"nodeType":"284","messageId":"285","endLine":1,"endColumn":24},{"ruleId":"282","severity":1,"message":"286","line":1,"column":8,"nodeType":"284","messageId":"285","endLine":1,"endColumn":13},{"ruleId":"282","severity":1,"message":"287","line":3,"column":10,"nodeType":"284","messageId":"285","endLine":3,"endColumn":30},{"ruleId":"282","severity":1,"message":"288","line":5,"column":21,"nodeType":"284","messageId":"285","endLine":5,"endColumn":27},{"ruleId":"282","severity":1,"message":"289","line":7,"column":10,"nodeType":"284","messageId":"285","endLine":7,"endColumn":22},{"ruleId":"282","severity":1,"message":"290","line":8,"column":10,"nodeType":"284","messageId":"285","endLine":8,"endColumn":22},{"ruleId":"282","severity":1,"message":"291","line":10,"column":10,"nodeType":"284","messageId":"285","endLine":10,"endColumn":21},{"ruleId":"282","severity":1,"message":"292","line":12,"column":11,"nodeType":"284","messageId":"285","endLine":12,"endColumn":23},{"ruleId":"282","severity":1,"message":"293","line":62,"column":29,"nodeType":"284","messageId":"285","endLine":62,"endColumn":37},{"ruleId":"282","severity":1,"message":"294","line":2,"column":10,"nodeType":"284","messageId":"285","endLine":2,"endColumn":17},{"ruleId":"282","severity":1,"message":"283","line":2,"column":19,"nodeType":"284","messageId":"285","endLine":2,"endColumn":33},{"ruleId":"282","severity":1,"message":"283","line":2,"column":10,"nodeType":"284","messageId":"285","endLine":2,"endColumn":24},{"ruleId":"282","severity":1,"message":"295","line":52,"column":24,"nodeType":"284","messageId":"285","endLine":52,"endColumn":37},{"ruleId":"282","severity":1,"message":"295","line":87,"column":24,"nodeType":"284","messageId":"285","endLine":87,"endColumn":37},{"ruleId":"282","severity":1,"message":"296","line":3,"column":3,"nodeType":"284","messageId":"285","endLine":3,"endColumn":10},{"ruleId":"282","severity":1,"message":"297","line":2,"column":10,"nodeType":"284","messageId":"285","endLine":2,"endColumn":21},{"ruleId":"282","severity":1,"message":"298","line":3,"column":8,"nodeType":"284","messageId":"285","endLine":3,"endColumn":14},{"ruleId":"282","severity":1,"message":"299","line":4,"column":17,"nodeType":"284","messageId":"285","endLine":4,"endColumn":26},{"ruleId":"282","severity":1,"message":"300","line":4,"column":28,"nodeType":"284","messageId":"285","endLine":4,"endColumn":36},{"ruleId":"282","severity":1,"message":"295","line":47,"column":31,"nodeType":"284","messageId":"285","endLine":47,"endColumn":44},{"ruleId":"301","severity":1,"message":"302","line":70,"column":6,"nodeType":"303","endLine":70,"endColumn":15,"suggestions":"304"},{"ruleId":"282","severity":1,"message":"295","line":81,"column":29,"nodeType":"284","messageId":"285","endLine":81,"endColumn":42},{"ruleId":"282","severity":1,"message":"305","line":7,"column":10,"nodeType":"284","messageId":"285","endLine":7,"endColumn":19},{"ruleId":"282","severity":1,"message":"295","line":90,"column":20,"nodeType":"284","messageId":"285","endLine":90,"endColumn":33},{"ruleId":"282","severity":1,"message":"306","line":107,"column":15,"nodeType":"284","messageId":"285","endLine":107,"endColumn":30},{"ruleId":"301","severity":1,"message":"307","line":272,"column":5,"nodeType":"303","endLine":272,"endColumn":12,"suggestions":"308"},{"ruleId":"301","severity":1,"message":"309","line":303,"column":6,"nodeType":"303","endLine":303,"endColumn":8,"suggestions":"310"},{"ruleId":"301","severity":1,"message":"311","line":313,"column":6,"nodeType":"303","endLine":313,"endColumn":24,"suggestions":"312"},{"ruleId":"282","severity":1,"message":"295","line":45,"column":31,"nodeType":"284","messageId":"285","endLine":45,"endColumn":44},{"ruleId":"282","severity":1,"message":"313","line":3,"column":28,"nodeType":"284","messageId":"285","endLine":3,"endColumn":48},{"ruleId":"282","severity":1,"message":"314","line":10,"column":10,"nodeType":"284","messageId":"285","endLine":10,"endColumn":17},{"ruleId":"282","severity":1,"message":"299","line":21,"column":17,"nodeType":"284","messageId":"285","endLine":21,"endColumn":26},{"ruleId":"282","severity":1,"message":"315","line":24,"column":10,"nodeType":"284","messageId":"285","endLine":24,"endColumn":20},{"ruleId":"282","severity":1,"message":"316","line":24,"column":22,"nodeType":"284","messageId":"285","endLine":24,"endColumn":33},"jsx-a11y/accessible-emoji",[],"@typescript-eslint/no-unused-vars","'transparentize' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'TOKEN_PRICE_DECIMALS' is defined but never used.","'ethers' is defined but never used.","'ERC20Service' is defined but never used.","'StakeService' is defined but never used.","'ZERO_NUMBER' is defined but never used.","'IBalanceInfo' is defined but never used.","'provider' is assigned a value but never used.","'opacify' is defined but never used.","'props' is defined but never used.","'Divider' is defined but never used.","'useUserInfo' is defined but never used.","'moment' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.","ArrayExpression",["317"],"'important' is defined but never used.","'refreshUserInfo' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'showMagnitudes'. Either include it or remove the dependency array.",["318"],"React Hook useEffect has a missing dependency: 'fetchGifts'. Either include it or remove the dependency array.",["319"],"React Hook useEffect has a missing dependency: 'initialize'. Either include it or remove the dependency array.",["320"],"'SettingsTeammatesSVG' is defined but never used.","'NavLink' is defined but never used.","'blobToFile' is defined but never used.","'resizeImage' is defined but never used.",{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},"Update the dependencies array to be: [account, getUsers]",{"range":"329","text":"330"},"Update the dependencies array to be: [showMagnitudes]",{"range":"331","text":"332"},"Update the dependencies array to be: [fetchGifts]",{"range":"333","text":"334"},"Update the dependencies array to be: [gifts, users, me, initialize]",{"range":"335","text":"336"},[1655,1664],"[account, getUsers]",[7842,7849],"[showMagnitudes]",[8722,8724],"[fetchGifts]",[8938,8956],"[gifts, users, me, initialize]"]